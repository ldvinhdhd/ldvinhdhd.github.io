<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>a collection of random projects</description>
    <link>https://nathanrooy.github.io</link>
    <atom:link href="https://nathanrooy.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>The Visual Similarity of Movie Posters</title>
        <description>&lt;p&gt;Recently this past winter my friends and I were trying to find something to watch on one of the major video streaming services and as as usual, we were drowning in decision paralysis. Page after page, and still nothing. After a certain point, all the movie covers began to blend together at which point we gave up. This got me thinking on the visual similarity of movie posters and the seemingly unoriginal designs most of them have…&lt;/p&gt;

&lt;p&gt;After doing a little research, it turns out that others have also noticed this pattern of visual similarity.&lt;sup id=&quot;fnref:fn1&quot;&gt;&lt;a href=&quot;#fn:fn1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn2&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn3&quot;&gt;&lt;a href=&quot;#fn:fn3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn4&quot;&gt;&lt;a href=&quot;#fn:fn4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; Within a short amount of time, I was able to come across dozens of common tropes movie studios have been using for their movie covers. Because all of the existing analysis had been manually completed, I began wondering if there was a way to automate that process and potentially find new visual relationships that hadn’t been noticed yet. Luckily, thanks to &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Deep_learning&quot;&gt;deep learning&lt;/a&gt;, this is a fairly trivial task.&lt;/p&gt;

&lt;p&gt;Scraping the movie covers from the internet yielded just over 169k images, of which 2636 were identical duplicates and thus removed. From here, the pool of images was reduced by an additional ~5k because they were boring, algorithmically generated images. Utilizing &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tensorflow/tensorflow&quot;&gt;TensorFlow&lt;/a&gt; and the inceptionV3&lt;sup id=&quot;fnref:fn5&quot;&gt;&lt;a href=&quot;#fn:fn5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; architecture pretrained on the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/ImageNet&quot;&gt;ImageNet&lt;/a&gt; dataset, I pulled network values from the second to last fully connected layer. This resulted in a 2048x1 vector which was then reduced down to a 2x1 using &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding&quot;&gt;t-SNE&lt;/a&gt;.&lt;sup id=&quot;fnref:fn6&quot;&gt;&lt;a href=&quot;#fn:fn6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt; Finally, the image vectors were translated from t-SNE space into a structured grid space via &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Combinatorial_optimization&quot;&gt;combinatorial optimization&lt;/a&gt; by solving the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Assignment_problem&quot;&gt;assignment problem&lt;/a&gt;. The results as seen below, were then &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Tiled_web_map&quot;&gt;tiled&lt;/a&gt; and served through &lt;a target=&quot;_blank&quot; href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt;. Make sure you click the full screen option!&lt;/p&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/leaflet/leaflet.css&quot; /&gt;

&lt;link href=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.min.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;

&lt;style type=&quot;text/css&quot;&gt;
    #basemapslidercontainer {
      position: absolute;
      top: 50px;
      right: 10px;
      z-index: 1000;
    }
    #basemapslider{
      font-size:62.5%;
      margin: 14px;
      height: 125px;
      width:7px;
    }
    #map{
       width: 100%;
       height: 400px
    }
.leaflet-control-fullscreen a {
  background:#fff url(fullscreen.png) no-repeat 0 0;
  background-size:26px 52px;
  }
  .leaflet-touch .leaflet-control-fullscreen a {
    background-position: 2px 2px;
    }
  .leaflet-fullscreen-on .leaflet-control-fullscreen a {
    background-position:0 -26px;
    }
  .leaflet-touch.leaflet-fullscreen-on .leaflet-control-fullscreen a {
    background-position: 2px -24px;
    }
.leaflet-container {
	background-color:rgba(0,0,0,1);
}
/* Do not combine these two rules; IE will break. */
.leaflet-container:-webkit-full-screen {
  width:100%!important;
  height:100%!important;
  }
.leaflet-container.leaflet-fullscreen-on {
  width:100%!important;
  height:100%!important;
  }
.leaflet-pseudo-fullscreen {
  position:fixed!important;
  width:100%!important;
  height:100%!important;
  top:0!important;
  left:0!important;
  z-index:99999;
  }
@media
  (-webkit-min-device-pixel-ratio:2),
  (min-resolution:192dpi) {
    .leaflet-control-fullscreen a {
      background-image:url(fullscreen@2x.png);
    }
  }
&lt;/style&gt;

&lt;link href=&quot;/assets/leaflet/leaflet.fullscreen.css&quot; rel=&quot;stylesheet&quot; /&gt;

&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/leaflet/leaflet.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/leaflet/Leaflet.fullscreen.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/leaflet/leaflet-hash.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;
$(document).ready(function () {
var southWest = L.latLng(-80.25, -99.75),
    northEast = L.latLng(80.25, 99.75),
    bounds = L.latLngBounds(southWest, northEast);
var map = L.map('map').setView([0, 0], 3);
map.addControl(new L.Control.Fullscreen());
//map.setMaxBounds(map.getBounds());
map.setMaxBounds(bounds);
//map.fitBounds(group.getBounds());
var mytile =L.tileLayer('https://s3.amazonaws.com/movie-poster-tsne/iv3_avgpool_90292_tsnemc_plx30_manhattan_iter50000_lr10_rf90000_300x300_SUPER_TILE_2/tiles/{z}/{x}/{y}.jpg', {
maxBoundsViscosity:1,
maxZoom: 9,
minZoom: 2,
noWrap:true,
tms: true,
}).addTo(map);
console.log(map.getBounds().getSouthWest().toString());
console.log(map.getBounds().getNorthEast().toString());
console.log(map.getCenter());
console.log(map.getBounds().toString());
})
  &lt;/script&gt;

&lt;div id=&quot;map&quot; style=&quot;margin-bottom:2em&quot;&gt;
    &lt;div id=&quot;basemapslidercontainer&quot;&gt;
        &lt;div id=&quot;basemapslider&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Like the architecture of most neural networks tasked with image classification, the InceptionV3 is based around the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Convolutional_neural_network&quot;&gt;convolution&lt;/a&gt;. Because of this, edges become the areas of interest within an image. While exploring the landscape, it’s interesting to note how sometimes the network is able to nail similarity while other times it’s questionable at best. This is partly because what we as humans define as similar can be quite different from what the network considers as similar. It’s also partly due to the fact that most movie posters are feature rich and T-SNE treats all positions within the feature vector fairly equal (i.e. trees == people == boats). Because of this, a movie poster with a forest and a single person is roughly equal to a poster with a couple of trees and multiple people. Either way, the network is able to produce some pretty interesting clusters.&lt;/p&gt;

&lt;h3&gt;References&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn1&quot;&gt;
      &lt;p&gt;Sidney Fussell, &lt;a target=&quot;_blank&quot; href=&quot;https://www.businessinsider.com/movie-poster-cliches-2016-5&quot;&gt;&lt;i&gt;Hollywood keeps using these 13 movie poster clichés over and over again&lt;/i&gt;&lt;/a&gt; (May 19, 2016) &lt;a href=&quot;#fnref:fn1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn2&quot;&gt;
      &lt;p&gt;Christophe Courtois, &lt;a target=&quot;_blank&quot; href=&quot;https://afficheschristophecourtois.blogspot.com/2011/06/ces-affiches-me-sortent-par-les-yeux.html&quot;&gt;&lt;i&gt;Ces affiches me sortent par les yeux!&lt;/i&gt;&lt;/a&gt; (June 17, 2011) &lt;a href=&quot;#fnref:fn2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn3&quot;&gt;
      &lt;p&gt;Christophe Courtois, &lt;a target=&quot;_blank&quot; href=&quot;https://afficheschristophecourtois.blogspot.com/2011/08/question-difficile-de-quelle-couleur.html&quot;&gt;&lt;i&gt;Question difficile : de quelle couleur sont les robes dans les films?&lt;/i&gt;&lt;/a&gt; (August 21, 2011) &lt;a href=&quot;#fnref:fn3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn4&quot;&gt;
      &lt;p&gt;Christophe Courtois, &lt;a target=&quot;_blank&quot; href=&quot;https://afficheschristophecourtois.blogspot.com/2011/06/les-affiches-de-films-de-dos.html&quot;&gt;&lt;i&gt;Les affiches de films… de dos&lt;/i&gt;&lt;/a&gt; (June 21, 2011) &lt;a href=&quot;#fnref:fn4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn5&quot;&gt;
      &lt;p&gt;C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, and Z. Wojna, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/pdf/1512.00567v3.pdf&quot;&gt;&lt;i&gt;Rethinking the Inception Architecture for Computer Vision&lt;/i&gt;&lt;/a&gt; (Proceedings of the IEEE conference on computer vision and pattern recognition. 2016) &lt;a href=&quot;#fnref:fn5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn6&quot;&gt;
      &lt;p&gt;L. Maaten, G. Hinton, &lt;a target=&quot;_blank&quot; href=&quot;https://lvdmaaten.github.io/publications/papers/JMLR_2008.pdf&quot;&gt;&lt;i&gt;Visualizing Data using t-SNE&lt;/i&gt;&lt;/a&gt; (Journal of Machine Learning Research 9, 2008) &lt;a href=&quot;#fnref:fn6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 24 Mar 2019 00:00:00 -0400</pubDate>
        <link>https://nathanrooy.github.io//posts/2019-03-24/movie-poster-tsne/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2019-03-24/movie-poster-tsne/</guid>
      </item>
    
      <item>
        <title>BlenderFOAM: Open-source Fluid Based Shape Optimization</title>
        <description>&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - Aerodynamic shape optimization for the masses.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I was recently cleaning out my closet and came across an old hard drive labeled “grad school”. After plugging it in and exploring it for a few minutes, I came across all my old thesis stuff. Seeing how this was before I started using GitHub, I figured I would post it in hopes that someone else could get some use from it. Even though it uses older versions of both Blender and OpenFOAM, the results should still be perfectly acceptable given that the equations of fluid dynamics haven’t changes much in the last hundred years.&lt;/p&gt;

&lt;h3&gt;Background&lt;/h3&gt;

&lt;p&gt;Given the ubiquity of cheap computing power both locally and in the cloud, the number of industries that deal with &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Computational_fluid_dynamics&quot;&gt;computational fluid dynamics&lt;/a&gt; (CFD) based &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Shape_optimization&quot;&gt;shape optimization&lt;/a&gt; continues to grow. What started out as a niche skill set for aerospace applications expanded out into high high-end motorsport and naval applications. Now, CFD based aerodynamic shape optimization is a key step in the design process for every major automotive company. And if the adoption of electric vehicles continues, aerodynamic shape optimization will only become more important. The simplest, cheapest way to increase electic vehicle range is through aerodynamic drag reduction. Same thing applies to ground based shipping. A small reduction in drag across an entire fleet of trucks means massive savings overall. BlenderFOAM was my thesis project and solution to this problem. It’s based entirely on open-source software, more specifically: &lt;a target=&quot;_blank&quot; href=&quot;https://www.blender.org/&quot;&gt;Blender&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://openfoam.org/&quot;&gt;OpenFOAM&lt;/a&gt;, and &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;OpenFOAM or Open Field Operation and Manipulation is an open-source toolbox that facilitates numerical solving and pre-/post-processing of &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Continuum_mechanics&quot;&gt;continuum mechanics&lt;/a&gt; problems. Written in C++, OpenFOAM specializes in solving CFD simulations in massively parallel environments. Development of the original OpenFOAM started in the late 1980’s at Imperial College, London. Its development was initiated because of a need for more a powerful and flexible simulation platform. At the time, Fortran was the defacto standard for writing simulation code, however C++ was chosen as the programming language due to its higher modularity and object-oriented features. A distinct advantage of OpenFOAM over other black box commercial CFD codes is its complete transparency which makes it easy to modify or integrate custom written modules such as experimental turbulence models. This ease of custom development stems from OpenFOAM’s syntax which closely resembles the tensor operations and partial differential equations being solved. If anyone tells you they’re a CFD expert and doesn’t use OpenFOAM, turn around and walk away. Every solver that isn’t OpenFOAM (Ansys, STAR-CCM+, Exa, etc…) are for children.&lt;/p&gt;

&lt;p&gt;Blender on the other hand is an open source design tool produced by the Blender Foundation and used primarily for graphics and animation. Its origin can be traced back to an in-house design tool used by the Dutch commercial animation company NeoGeo and Not a Number (NaN). When NaN went bankrupt in 2002, Blender source code was released and the Blender Foundation was formed to continue software development. Blender is primarily used for animated films and highly detailed static renderings. In addition, Blender is capable of producing interactive 3D applications and video games. Within Blender, a rich diversity of mesh creation and deformation tools are available and all accessible from the built-in python API. This enables complete automation via the terminal using batch scripts or Python. Users can also use Python to develop custom tools that can be easily implemented into the GUI. A distinct advantage of Blender is its very low hardware requirements which allows for rapid mesh deformation of high-resolution models to occur very quickly on a standard desktop computer. This lends itself very well to the task of aerodynamic shape optimization.&lt;/p&gt;

&lt;h3&gt;Geometry Parameterization&lt;/h3&gt;

&lt;p&gt;Before any shape optimization can take place, the geometry must be &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Parametrization_(geometry)&quot;&gt;parameterized&lt;/a&gt;. Since Blender lacks support for parametric geometry, CAD files must be converted into a triangulated surface mesh and imported as an &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/STL_(file_format)&quot;&gt;stl&lt;/a&gt;. Once the geometry is in Blender though, it can be parameterized using one or several different methods.&lt;/p&gt;

&lt;p&gt;The most common mesh deformation method I find myself using is the &lt;a target=&quot;_blank&quot; href=&quot;https://docs.blender.org/manual/en/latest/rigging/lattice.html&quot;&gt;lattice&lt;/a&gt;. It’s simple, easy to use, and gets the job done. The lattice mesh deformation tool (figure [1]) is Blenders implementation of a free-form deformation method. It is initiated by the creation of a 3D bounding box which is then filled with a user specified number of evenly spaced control points along each principal axis. These control points can then be maneuvered, manipulating the geometry accordingly using a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;volumetric B-spline&lt;/a&gt; function. This B-spline approach allows the lattice to have a localized impact on the geometry which spans no more than two control points in distance.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;blender lattice mesh deformation&quot; width=&quot;400&quot; src=&quot;/images/2019-03-05/Mesh_Deformation_LATTICE.png&quot; /&gt;
        &lt;figcaption&gt;Figure 1: Lattice&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;Sometimes, one lattice just doesn’t deliver enough deformation fidelity and you need to use several. No Problem! Blender is a beast, and will gladly support any number of additional lattices. This enables users to create a finely tuned parametric mesh, ready for optimization. This permits optimization on different length scales which for most real world applications is a must. Seen below in figure [2], additional lattices have been implemented to increase shape control.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;blender lattice mesh deformation&quot; width=&quot;400&quot; src=&quot;/images/2019-03-05/Mesh_Deformation_LATTICE_3.png&quot; /&gt;
        &lt;figcaption&gt;Figure 2: Multiple lattices&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;If one or more lattices fail to deliver, the next option is a cage. From the users perspective, the cage deformation tool (figure [3]) is very similar to the lattice tool. Control points are manually created and formed into a cage encompassing the geometry. This cage is free to take any shape the designer requires so long as it forms a closed surface. The control points forming this cage can then be adjusted, manipulating the geometry within. This enables a potentially large reduction in the number of control points, thus reducing the design space through intuitive placement of control points. The Blender cage system is based on work done at Pixar.&lt;sup id=&quot;fnref:fn1&quot;&gt;&lt;a href=&quot;#fn:fn1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; The cage method operates
by first embedding itself to the geometry volume by solving Laplace’s equation. From this solution, the influence of each control point on the geometry is now known. Because of the global nature of elliptic PDEs, each control point has a theoretical influence on all parts of the geometry. In practice however, the influence of a control point on the geometry surface decays rapidly. An advantage of the cage method is that once it has been embedded to the geometry surface, deformations are extremely rapid, requiring only matrix-vector products.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;blender cage deformation&quot; width=&quot;400&quot; src=&quot;/images/2019-03-05/Mesh_Deformation_CAGE.png&quot; /&gt;
        &lt;figcaption&gt;Figure 3: Cage&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The last form of geometry manipulation comes from actual point manipulation of the geometry (figure [4]). This method is basic and primitive, however in some circumstances it may prove to be the most useful.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;blender direct deformation&quot; width=&quot;400&quot; src=&quot;/images/2019-03-05/Mesh_Deformation_DIRECT.png&quot; /&gt;
        &lt;figcaption&gt;Figure 4: Direct&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;Overall, Blender supports a rich environment for mesh deformation. The covered techniques can not only run in series together on a single feature, they are only a small sample of whats available to designers. And thanks to Blender’s built-in Python API, custom techniques are a simple addition.&lt;/p&gt;

&lt;h3&gt;Optimizer Performance&lt;/h3&gt;

&lt;p&gt;A simple way to measure both optimizer performance and geometry parameterization is through an inverse design challenge. Starting off with the Tyrrell 26 airfoil which used on the front wing of the 1998 Tyrrell Formula 1 car seen below in figure [5], the geometry will be subjected to a  random perturbation using a lattice resulting in a completely new airfoil shape.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;blender direct deformation&quot; src=&quot;/images/2019-03-05/tyrrell1998.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 5: Tyrrell from 1998&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The goal of this exercise will then be to recover the deformed shape back to the original airfoil in as few iterations as possible. To get a better understanding of performance, two tests will be carried using lattices of different resolutions.&lt;/p&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; title=&quot;inverse design results (4)&quot; src=&quot;/images/2019-03-05/Benchmark_0_Lattice4_initial.png&quot; /&gt;
            &lt;img width=&quot;49%&quot; title=&quot;inverse design results (4)&quot; src=&quot;/images/2019-03-05/Benchmark_0_lattice4_deformed.png&quot; /&gt;
            &lt;figcaption&gt;Figure 6: Target (left) and deformed (right) - 4 control points&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; title=&quot;inverse design results (4)&quot; src=&quot;/images/2019-03-05/Benchmark_0_lattice10_initial.png&quot; /&gt;
            &lt;img width=&quot;49%&quot; title=&quot;inverse design results (10)&quot; src=&quot;/images/2019-03-05/Benchmark_0_lattice10_deformed.png&quot; /&gt;
            &lt;figcaption&gt;Figure 7: Target (left) and deformed (right) - 10 control points&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;To quantify the difference between the initially perturbed airfoil and the target airfoil, a purely geometric cost function has been created. It can be seen from equation [1] below
that it is simply the squared sum of the distance between the actual and target vertices.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ \delta = \sum_{i=1}^{n verts} \left(v_i - v_i^*\right)^2 \tag{1} $$&lt;/equation&gt;

&lt;p&gt;From equation [1], &lt;equation class=&quot;has-jax&quot;&gt;\( v_i \)&lt;/equation&gt; are the current airfoil vertex coordinates and &lt;equation class=&quot;has-jax&quot;&gt;\( v_i^* \)&lt;/equation&gt;, are the corresponding target vertex coordinates. The optimizers for this exercise have been assigned a maximum function evaluation limit of 1500 and a convergence tolerance criteria of 1e-03.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;inverse design results (4)&quot; width=&quot;500&quot; src=&quot;/images/2019-03-05/BENCHMARK_0_lattice_04.png&quot; /&gt;
        &lt;img title=&quot;inverse design results (10)&quot; width=&quot;500&quot; src=&quot;/images/2019-03-05/BENCHMARK_0_lattice_10.png&quot; /&gt;
        &lt;figcaption&gt;Figure 8: Shape matching results, 4 control points (top), 10 control points (bottom)&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;From figure 8 above, it can be seen that Blender and the associated optimizers are able to fully recover the airfoil geometry within a respectable number of iterations. Of note is the relative ease in which &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/BOBYQA&quot;&gt;BOBYQA&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/NEWUOA&quot;&gt;NEWUOA&lt;/a&gt; were able to converge quickest in both a 4 and 10 dimensional space. This hints at the fact that this scenario is likely a fairly smooth, unimodal problem.&lt;/p&gt;

&lt;h3&gt;Multi-objective Airbox Design&lt;/h3&gt;

&lt;p&gt;For this test, BlenderFOAM will be challenged to optimize the performance of a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Formula_Ford&quot;&gt;Formula Ford&lt;/a&gt; airbox as seen below in figure [9]. This geometry was chosen because it represents one of the most common parts in the world of motorsport. Almost every vehicle features an airbox of some sort, making it a highly engineered component.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img src=&quot;/images/2019-03-05/Airbox3View.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 9: Formula Ford airbox&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The purpose of an &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Airbox&quot;&gt;airbox&lt;/a&gt; is to deliver large amounts of air to the engine as painlessly as possible. Therefore the objective is to make the airbox as efficient as possible by minimizing the pressure loss between the inlet and outlet. The more efficient an airbox is, the easier the engine can breathe resulting in better performance.&lt;/p&gt;

&lt;p&gt;A multi-objective approach has been used here because when optimized for purely a pressure loss improvement, the pressure distribution at the outlet can become highly uneven with a large amount of high pressure developing along the edges. For this reason, the pressure loss will be minimized while also minimizing the standard deviation of the velocity magnitude at the outlet.&lt;/p&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_lattice2.jpg&quot; /&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_latticeClose.jpg&quot; /&gt;
            &lt;figcaption&gt;Figure 10: Airbox parameterization&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;The airbox geometry was  parameterized using two lattices, one for macro scale structural deformations and a smaller one was located near the neck to reduce the chances of initial flow separation. Using the simpleFOAM solver along with the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/SST_(Menter%E2%80%99s_Shear_Stress_Transport)&quot;&gt;SST K-ω turbulence model&lt;/a&gt;, the inlet has been assigned a velocity of 30 m/s (67.1081 mph) normal to the inlet plain with an outlet pressure of 0.0 Pa. Note that this setup has been heavily simplified relative to what is normally considered ideal. A setup more aligned with motorsport best practices would include optimizing across a range of inlet velocities (Reynolds sweep), inlet velocity directions, initial turbulence levels, and varying outlet pressure levels as well as external geometric constraints. In addition, simpleFOAM which is a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Reynolds-averaged_Navier%E2%80%93Stokes_equations&quot;&gt;RANS&lt;/a&gt; based solver should be swapped for a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Detached_eddy_simulation&quot;&gt;DES&lt;/a&gt; or &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Large_eddy_simulation&quot;&gt;LES&lt;/a&gt; based approach to better resolve small-scale, time-dependent turbulence structures. Lastly, because this was ran on my laptop and thus computationally limited, cell count was kept low at 323,480.&lt;/p&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_P_INITIAL.jpg&quot; /&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_P_NEWUOA.jpg&quot; /&gt;
            &lt;figcaption&gt;Figure 11: Initial velocity magnitude (left) and final (right)&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_K_INITIAL.jpg&quot; /&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/Benchmark_4_K_NEWUOA.jpg&quot; /&gt;
            &lt;figcaption&gt;Figure 12: Initial turbulent kinetic energy (left) and final (right)&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;From figures [11] and [12] above, a direct comparison between the initial and optimal solution can be seen. Of interest is the improvement in flow distribution as seen by the velocity magnitude. To further improve flow uniformity, additional fidelity is needed. This could be accomplished by adding more control points however the solution would become increasingly more expensive. A cage parameterization would be ideal.&lt;/p&gt;

&lt;p&gt;Below the solution convergence can be seen from both the velocity distribution and pressure loss perspectives.&lt;/p&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/BENCHMARK_4_CONVERGENCE_P.png&quot; /&gt;
            &lt;img width=&quot;49%&quot; src=&quot;/images/2019-03-05/BENCHMARK_4_CONVERGENCE_SD.png&quot; /&gt;
            &lt;figcaption&gt;Figure 13: Solution convergence for pressure loss (left) and flow uniformity (right)&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;Lastly, the distribution of solutions can be seen below in figure [14]. A wide variety of responses were created from the optimizers with the majority succeeding in improving the performance of the airbox. Of interest is the diverse range that NEWUOA creates in its search for the optimum. This is a positive attribute in that, the search space is completely and evenly filled except near the optimum where there is a concentration of designs.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img title=&quot;airbox design canidates&quot; src=&quot;/images/2019-03-05/BENCHMARK_4_NEWUOA_PARETO.png&quot; /&gt;
        &lt;figcaption&gt;Figure 14: Airbox design canidates&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The initial airbox and the NEWUOA optimized design can be seen below in figure [15]. One can easily see the differences between the initial and optimized designs.&lt;/p&gt;

&lt;center&gt;
    &lt;div style=&quot;display:inline-block;&quot;&gt;
        &lt;figure&gt;
            &lt;img width=&quot;49%&quot; title=&quot;airbox shape optimization - initial&quot; src=&quot;/images/2019-03-05/initial.jpg&quot; /&gt;
            &lt;img width=&quot;49%&quot; title=&quot;airbox shape optimization - final&quot; src=&quot;/images/2019-03-05/NEWUOA.jpg&quot; /&gt;
            &lt;figcaption&gt;Figure 15: Optimization results - initial (left), final NEWUOA solution (right)&lt;/figcaption&gt;
        &lt;/figure&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;p&gt;Although this platform found substantial performance improvements for this Formula Ford airbox, one has to remember that this is a single wall structure and any geometric adjustments will impact both internal and external flow properties. The current optimized design may provide better internal flow conditions but it might also adversely impact the external drag of the vehicle rendering it useless.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Overall open-source based aerodynamic shape optimization if used correctly can be an extremely powerful design tool. Its performance has been proven, and its application has been demonstrated. Instead of paying tens of thousands of dollars for a single seat of commercial black box mystery, one could simply clone [&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/nathanrooy/BlenderFOAM&quot;&gt;this repo&lt;/a&gt;] and begin optimizing!&lt;/p&gt;

&lt;h3&gt;Acknowledgements&lt;/h3&gt;

&lt;p&gt;Special thanks once again to Paolo, and Eugene at &lt;a target=&quot;_blank&quot; href=&quot;https://engys.com/&quot;&gt;Engys&lt;/a&gt; for helping me while I completed my thesis.&lt;/p&gt;

&lt;h3&gt;References&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn1&quot;&gt;
      &lt;p&gt;Joshi, P., Meyer, M., and DeRose, T., &lt;a href=&quot;https://graphics.pixar.com/library/HarmonicCoordinatesB/paper.pdf&quot; target=&quot;_blank&quot;&gt;&lt;i&gt;Harmonic Coordinates for Character Articulation&lt;/i&gt;&lt;/a&gt; (Pixar Technical Memo, 2007) &lt;a href=&quot;#fnref:fn1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 05 Mar 2019 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</guid>
      </item>
    
      <item>
        <title>A Low Cost Approach to Improving Pedestrian Safety with Deep Learning</title>
        <description>&lt;style&gt;
    .plot_style line{
  stroke: grey;
}

.plot_style path{
  stroke: grey;
}

.plot_style text{
  fill: grey;
  font-size: 1em;
  font-family:'Open Sans';
  font-style:normal;
  font-weight:300;
}
&lt;/style&gt;

&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - Using TensorFlow and a Raspberry Pi, I developed a cheap and accurate way of counting both pedestrians and vehicle traffic.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;As someone who &lt;a target=&quot;_blank&quot; href=&quot;../../2018-01-11/one-year-of-bike-commuting/&quot;&gt;bikes to work everyday&lt;/a&gt;, I’m acutely aware of how important good urban design and planning is and its impact on pedestrian safety as well as the overall well-being of a neighborhood. I’m also aware of how difficult it is to convince car dependent, suburban commuters that we need to invest our money into bike lanes and &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Curb_extension&quot;&gt;curb extensions&lt;/a&gt; rather than lane extensions and parking lots. Because of this, I’m always a bit bummed when I see unfounded internet shouting matches over why the city should/should not implement bike and pedestrian safety measures. We should let the data decide what happens, not ideology or personal bias. Unfortunately, it’s this data that’s hard to come by.&lt;/p&gt;

&lt;p&gt;I remember when shortly after the &lt;a target=&quot;_blank&quot; href=&quot;https://www.cincinnati-oh.gov/bikes/news/central-parkway-bikeway/&quot;&gt;bike lanes on Central Pkwy&lt;/a&gt; were installed, they were looking for volunteers to stand out in the baking sun all day and manually count cyclists as they rode by. This struck me as comically old-fashioned but also a bit sad because this was apparently the only way to get the data at the time. Fast forward almost five years and the situation appears to not have improved much. Below is a picture I took recently of some pneumatic tubes used to count traffic.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;pneumatic tube traffic counter&quot; title=&quot;pneumatic tube traffic counter&quot; src=&quot;/images/2019-02-06/pneumatic-tubes.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 1: Pneumatic tube based traffic counting&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;These are great for temporarily counting cars and other large vehicles. Counting bikes, and pedestrians, not so much… When I rode over them that morning on my bike, I was indistinguishable from a motorcycle. I’m an invisible cyclist, so why should the city prioritize this road for a bike lane? Additionally, this setup was in place for less than a day because those tubes are held in place using nails pounded into the road surface and reinforced with a couple strips of Kentucky chrome. Definitely not ideal.&lt;/p&gt;

&lt;center&gt;
&lt;table style=&quot;width:400px;&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th style=&quot;text-align: left; padding-left:1em;&quot;&gt;&lt;strong&gt;System&lt;/strong&gt;&lt;/th&gt;
            &lt;th style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Type&lt;/strong&gt;&lt;/th&gt;
            &lt;th style=&quot;text-align: center;&quot;&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;SenSource&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;pneumatic&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;$695&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;RoadPod&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;pneumatic&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;$1,150&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;JAMAR TRAX I Plus&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;pneumatic&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;$2,600&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Wavetronix SmartSensor HD&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;radar&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;$6,700&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Miovision Technologies VCU&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;video&lt;/td&gt;
            &lt;td style=&quot;text-align: center;&quot;&gt;$3,700&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;figcaption&gt;Table 1: Selection of traffic counting systems&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;Although other counting systems exist, they tend to be overly expensive, invasive, and unable to simultaneously count both pedestrians and vehicle traffic.&lt;sup id=&quot;fnref:fn12&quot;&gt;&lt;a href=&quot;#fn:fn12&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Cincinnati is full of bikers, I see them every day. But if they’re not being counted, we’ll never be able to overcome the suburban bias in Cincinnati’s urban design and planning. With a better counting system in place we can get the necessary data to make informed decisions that reflect reality, resulting in a fairer and more equitable city. If only there was a low-cost, non-invasive solution that could passively count all types of traffic simultaneously in any weather condition 24/7/365 and seamlessly push that information to the cloud on a minute by minute basis…&lt;/p&gt;

&lt;h3&gt;My Solution&lt;/h3&gt;

&lt;p&gt;After thinking about this for a while, I decided that I could probably do a better job than what currently exists. Given that low-cost and high accuracy are my two primary goals, I went with a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Raspberry_Pi&quot;&gt;Raspberry Pi Zero&lt;/a&gt; which is the smallest/cheapest of the Raspberry Pi models with the 8-megapixel v2 NoIR (infrared) camera and a rechargeable usb battery pack. Since my system is vision based it needs a clear line of sight to the street but also somehow remain hidden from people who might tamper with it. Given these two contradictory constraints of being hidden yet visible, I went with a stealth approach. This was accomplished by buying a plastic weatherproof electrical box and cutting a hole on the front for the camera. The camera hole was sealed with a clear lens filter. Lastly, I mounted six stupidly strong &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Neodymium_magnet&quot;&gt;neodymium magnets&lt;/a&gt; on the back so I could attach it to street lights, sign posts, etc.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;deep learning raspberry pi traffic tracker&quot; title=&quot;deep learning raspberry pi traffic tracker&quot; src=&quot;/images/2019-02-06/traffic-tracker-close-up.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 2: My deep learning, raspberry pi based traffic tracker&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;To actually count pedestrians and vehicle traffic I built out a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Convolutional_neural_network&quot;&gt;convolutional neural network&lt;/a&gt; (CNN) with a secondary region proposal network (R-CNN) using &lt;a target=&quot;_blank&quot; href=&quot;https://www.tensorflow.org/&quot;&gt;TensorFlow&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;. This allows for both the detection and localization of objects within the frame. Actual object tracking was accomplished using a light weight temporal clustering scheme using &lt;a target=&quot;_blank&quot; href=&quot;http://www.numpy.org/&quot;&gt;NumPy&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;http://scikit-learn.org&quot;&gt;scikit-learn&lt;/a&gt;. For a more in-depth look, click [&lt;a href=&quot;#technical-notes&quot;&gt;here&lt;/a&gt;] to read the technical notes section.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;deep learning raspberry pi traffic tracker in the wild&quot; title=&quot;deep learning raspberry pi traffic tracker in the wild&quot; src=&quot;/images/2019-02-06/in-the-field-03.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 3: Hidden in plain sight - my baby out in the wild!&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;After a week or so of casual coding I had a finished system. Given that the tracking algorithm is built on top of open-source software, the only costs associated with this system arise from the hardware side.&lt;/p&gt;

&lt;center&gt;
&lt;table style=&quot;width:250px;&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th style=&quot;text-align: left; padding-left:1em&quot;&gt;&lt;strong&gt;Item&lt;/strong&gt;&lt;/th&gt;
            &lt;th style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Raspberry Pi Zero&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;$10&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Plastic electrical box&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;$14&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Magnets&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;$18&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;128GB usb storage&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;$28&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;USB Battery pack&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;$40&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: right;&quot;&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
            &lt;td style=&quot;text-align: center; color:red; padding-right:0.5em;&quot;&gt;&lt;strong&gt;$110&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
    &lt;figcaption&gt;Table 2: Cost breakdown of my Raspberry Pi based system&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;As an example of what all this looks like in action, below is a gif showing the tracking algorithm when it was placed at random spots throughout Cincinnati.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;deep learning raspberry pi traffic tracker in the wild&quot; title=&quot;deep learning raspberry pi traffic tracker in the wild&quot; src=&quot;/images/2019-02-06/traffic-tracker.gif&quot; /&gt;
        &lt;figcaption&gt;Figure 4: Tracking traffic&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;h3&gt;Results&lt;/h3&gt;

&lt;p&gt;To test my system out, I placed it at few areas throughout the city. I started out by leaving it out in the field for 24 hours at a time. After I got comfortable with its performance I extended that duration to a full week (usually Sunday night to Sunday night).&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img src=&quot;/images/2019-02-06/central-pkwy-location-90.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 5: Central Pkwy location&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;As an example of the data that this system produces, below are the results for when it was placed on the Colerain Ave. bridge right as it passes over Central Pkwy during August 23, 2018.&lt;/p&gt;

&lt;div id=&quot;plot_3&quot;&gt;&lt;/div&gt;
&lt;center&gt;
    &lt;figcaption&gt;Figure 6: Vehicle counts on Central Pkwy&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;Because the system generates a time stamp for each object as it passes over an imaginary “start/finish”, I binned all these data points into five-minute blocks. Additionally, even though vehicle traffic can be further broken down by vehicle type, it was easier to just group all vehicles into a single class. Above in figure 6, we can see the influx of southbound commuters coming into the city during the morning rush as well as when they leave in the evening rush headed north. Vehicle traffic peaked at 88 northbound vehicles per five minutes around 5:20pm. The day ended up with a total of 6982 southbound and 7092 northbound vehicles travelling on this particular segment of Central Pkwy.&lt;/p&gt;

&lt;div id=&quot;plot_1&quot;&gt;&lt;/div&gt;
&lt;center&gt;
    &lt;figcaption&gt;Figure 7: Bicycle counts on Central Pkwy&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;Because the frequency of bicycle and pedestrian traffic was so much smaller relative to vehicle traffic, it was easier to display this data from a cumulative perspective. Above in figure 7, the bicycle count on Central Pkwy can be seen. Even with the cumulative form, we can see a large amount of growth during the southbound morning rush into the city, but compared to vehicle traffic, the evening bicycle rush is more diffused. Total bicycle traffic for the day capped out at 56 and 57 for the northbound and southbound directions respectively.&lt;/p&gt;

&lt;div id=&quot;plot_2&quot;&gt;&lt;/div&gt;
&lt;center&gt;
    &lt;figcaption&gt;Figure 8: Pedestrian counts on Central Pkwy&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;Lastly, the pedestrian traffic can be seen above in figure 8. Unlike both vehicle and bicycle traffic, pedestrian traffic on Central Pkwy doesn’t have large spikes during the morning / evening rushes. Instead, pedestrian traffic is diffused fairly evenly throughout the entire day.&lt;/p&gt;

&lt;!-- load the d3.js library --&gt;
&lt;script src=&quot;https://d3js.org/d3.v4.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- BICYCLES --&gt;
&lt;script&gt;

// set the dimensions and margins of the graph
var margin = {top: 50, right: 20, bottom: 30, left: 25},
    width = 650 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

// parse the date / time
var parseTime = d3.timeParse(&quot;%Y-%m-%d %H:%M:%S&quot;);

// set the ranges
var x = d3.scaleTime().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);




// PLOT #1 -&gt; BICYCLES
var svg_1 = d3.select(&quot;#plot_1&quot;).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
    .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
        &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// cumulative bicycles (s)
var valueline1 = d3.line().curve(d3.curveStepBefore)
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.BIKE_S_CUM); });

// cumulative bicycles (n)
var valueline2 = d3.line().curve(d3.curveStepBefore)
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.BIKE_N_CUM); });

// Get the data
d3.csv(&quot;../../../assets/files/2019-02-06/counts_b.csv&quot;, function(error, data) {
    if (error) throw error;

// format the data
data.forEach(function(d) {
d.TIME = parseTime(d.TIME);
d.BIKE_N_CUM = +d.BIKE_N_CUM;
d.BIKE_S_CUM = +d.BIKE_S_CUM;});

// Scale the range of the data
x.domain(d3.extent(data, function(d) { return d.TIME; }));
y.domain([0, 60]);

// Add the valueline path.
svg_1.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline1)
  .style('fill','none')
 // .style('opacity', 0.8)
  .style('stroke', d3.rgb(3, 120, 177));

// Add the valueline path.
svg_1.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline2)
  .style('fill','none')
  //.style('opacity', 0.8)
  .style('stroke', d3.rgb(247, 127, 15));

// Add the X Axis
svg_1.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
    .call(d3.axisBottom(x))
    .selectAll(&quot;text&quot;)
    .attr(&quot;y&quot;, '1em')
    .attr(&quot;x&quot;, '-0.25em')
    .style(&quot;text-anchor&quot;, &quot;start&quot;);

// Add the Y Axis
svg_1.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .call(d3.axisLeft(y));

// text label for the y axis
svg_1.append(&quot;text&quot;)
    .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
    .attr(&quot;y&quot;, 5)
    .attr(&quot;x&quot;, 0)
    .attr(&quot;dy&quot;, &quot;1em&quot;)
    .style(&quot;text-anchor&quot;, &quot;end&quot;)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;fill&quot;, &quot;grey&quot;)
    .text(&quot;Total number of bicycles&quot;);

// add title
svg_1.append(&quot;text&quot;)
    .attr(&quot;x&quot;, (width / 2))
    .attr(&quot;y&quot;, - (margin.top / 2))
    .attr(&quot;text-anchor&quot;, &quot;middle&quot;)
    .style('font-family','Open Sans')
    .style(&quot;font-size&quot;, &quot;1em&quot;)
    .style(&quot;fill&quot;,&quot;grey&quot;)
    .text(&quot;Cumulative Bicycle Counts&quot;);

//Draw the Rectangle
svg_1.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9 - 16)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.8)
    .style('fill', d3.rgb(247, 127, 15));

svg_1.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50 - 16)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Northbound&quot;);

svg_1.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.9)
    .style('fill', d3.rgb(3, 120, 177));

svg_1.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Southbound&quot;);
});










// PLOT #2 -&gt; PEDESTRIANS
var svg_2 = d3.select(&quot;#plot_2&quot;).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
    .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
        &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// cumulative bicycles (s)
var valueline3 = d3.line().curve(d3.curveStepBefore)
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.PED_S_CUM); });

// cumulative bicycles (n)
var valueline4 = d3.line().curve(d3.curveStepBefore)
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.PED_N_CUM); });

// Get the data
d3.csv(&quot;../../../assets/files/2019-02-06/counts_p.csv&quot;, function(error, data) {
    if (error) throw error;

// format the data
data.forEach(function(d) {
d.TIME = parseTime(d.TIME);
d.PED_N_CUM = +d.PED_N_CUM;
d.PED_S_CUM = +d.PED_S_CUM;});

// Scale the range of the data
x.domain(d3.extent(data, function(d) { return d.TIME; }));
y.domain([0, 65]);

// Add the valueline path.
svg_2.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline3)
  .style('fill','none')
 // .style('opacity', 0.8)
  .style('stroke', d3.rgb(3, 120, 177));

// Add the valueline path.
svg_2.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline4)
  .style('fill','none')
  //.style('opacity', 0.8)
  .style('stroke', d3.rgb(247, 127, 15));

// Add the X Axis
svg_2.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
    .call(d3.axisBottom(x))
    .selectAll(&quot;text&quot;)
    .attr(&quot;y&quot;, '1em')
    .attr(&quot;x&quot;, '-0.25em')
    .style(&quot;text-anchor&quot;, &quot;start&quot;);

// Add the Y Axis
svg_2.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .call(d3.axisLeft(y));

// text label for the y axis
svg_2.append(&quot;text&quot;)
    .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
    .attr(&quot;y&quot;, 5)
    .attr(&quot;x&quot;, 0)
    .attr(&quot;dy&quot;, &quot;1em&quot;)
    .style(&quot;text-anchor&quot;, &quot;end&quot;)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;fill&quot;, &quot;grey&quot;)
    .text(&quot;Total number of pedestrians&quot;);

// add title
svg_2.append(&quot;text&quot;)
    .attr(&quot;x&quot;, (width / 2))
    .attr(&quot;y&quot;, - (margin.top / 2))
    .attr(&quot;text-anchor&quot;, &quot;middle&quot;)
    .style('font-family','Open Sans')
    .style(&quot;font-size&quot;, &quot;1em&quot;)
    .style(&quot;fill&quot;,&quot;grey&quot;)
    .text(&quot;Cumulative Pedestrian Counts&quot;);

//Draw the Rectangle
svg_2.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9 - 16)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.8)
    .style('fill', d3.rgb(247, 127, 15));

svg_2.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50 - 16)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Northbound&quot;);

svg_2.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.9)
    .style('fill', d3.rgb(3, 120, 177));

svg_2.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Southbound&quot;);
});















// PLOT #3 -&gt; VEHICLES
var svg_3 = d3.select(&quot;#plot_3&quot;).append(&quot;svg&quot;)
    .attr(&quot;width&quot;, width + margin.left + margin.right)
    .attr(&quot;height&quot;, height + margin.top + margin.bottom)
    .append(&quot;g&quot;)
    .attr(&quot;transform&quot;,
        &quot;translate(&quot; + margin.left + &quot;,&quot; + margin.top + &quot;)&quot;);

// cumulative bicycles (s)
var valueline5 = d3.line()
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.VEH_S); });

// cumulative bicycles (n)
var valueline6 = d3.line()
    .x(function(d) { return x(d.TIME); })
    .y(function(d) { return y(d.VEH_N); });

// Get the data
d3.csv(&quot;../../../assets/files/2019-02-06/counts_v.csv&quot;, function(error, data) {
    if (error) throw error;

// format the data
data.forEach(function(d) {
d.TIME = parseTime(d.TIME);
d.VEH_S = +d.VEH_S;
d.VEH_N = +d.VEH_N;});

// Scale the range of the data
x.domain(d3.extent(data, function(d) { return d.TIME; }));
y.domain([0, 100]);

// Add the valueline path.
svg_3.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline5)
  .style('fill','none')
 // .style('opacity', 0.8)
  .style('stroke', d3.rgb(3, 120, 177));

// Add the valueline path.
svg_3.append(&quot;path&quot;)
  .data([data])
  .attr(&quot;class&quot;, &quot;line&quot;)
  .attr(&quot;d&quot;, valueline6)
  .style('fill','none')
  //.style('opacity', 0.8)
  .style('stroke', d3.rgb(247, 127, 15));

// Add the X Axis
svg_3.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .attr(&quot;transform&quot;, &quot;translate(0,&quot; + height + &quot;)&quot;)
    .call(d3.axisBottom(x))
    .selectAll(&quot;text&quot;)
    .attr(&quot;y&quot;, '1em')
    .attr(&quot;x&quot;, '-0.25em')
    .style(&quot;text-anchor&quot;, &quot;start&quot;);

// Add the Y Axis
svg_3.append(&quot;g&quot;)
    .attr(&quot;class&quot;, &quot;plot_style&quot;)
    .call(d3.axisLeft(y));

// text label for the y axis
svg_3.append(&quot;text&quot;)
    .attr(&quot;transform&quot;, &quot;rotate(-90)&quot;)
    .attr(&quot;y&quot;, 5)
    .attr(&quot;x&quot;, 0)
    .attr(&quot;dy&quot;, &quot;1em&quot;)
    .style(&quot;text-anchor&quot;, &quot;end&quot;)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;fill&quot;, &quot;grey&quot;)
    .text(&quot;Vehicles per five minutes&quot;);

// add title
svg_3.append(&quot;text&quot;)
    .attr(&quot;x&quot;, (width / 2))
    .attr(&quot;y&quot;, - (margin.top / 2))
    .attr(&quot;text-anchor&quot;, &quot;middle&quot;)
    .style('font-family','Open Sans')
    .style(&quot;font-size&quot;, &quot;1em&quot;)
    .style(&quot;fill&quot;,&quot;grey&quot;)
    .text(&quot;Vehicles per Five Minutes&quot;);

//Draw the Rectangle
svg_3.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9 - 16 - 100)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.8)
    .style('fill', d3.rgb(247, 127, 15));

svg_3.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50 - 16 - 100)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Northbound&quot;);

svg_3.append(&quot;rect&quot;)
    .attr(&quot;x&quot;, width - 100)
    .attr(&quot;y&quot;, height - 50 - 9 - 100)
    .attr(&quot;width&quot;, 18)
    .attr(&quot;height&quot;, 9)
    .style('opacity', 0.9)
    .style('fill', d3.rgb(3, 120, 177));

svg_3.append(&quot;text&quot;)
    .attr(&quot;x&quot;, width - 78)
    .attr(&quot;y&quot;, height - 50 - 100)
    .attr('font-family', 'Open Sans')
    .style(&quot;font-size&quot;, &quot;0.8em&quot;)
    .style(&quot;text-anchor&quot;, &quot;start&quot;)
    .style('fill','grey')
    .text(&quot;Southbound&quot;);
});


&lt;/script&gt;

&lt;h3 id=&quot;learnings&quot;&gt;Learnings and Future Improvements&lt;/h3&gt;

&lt;p&gt;Over the span of this project I was able to fully test the limits of this first prototype and came away with a few key points.&lt;/p&gt;

&lt;p&gt;&lt;strong id=&quot;algo-improvements&quot;&gt;Algorithm Improvements&lt;/strong&gt; — Although the current two-part solution works, it is far from elegant and definitely not the most efficient solution. I am actively building out several new deep learning based solutions that combine the detection, localization, and tracking into a single operation within &lt;a target=&quot;_blank&quot; href=&quot;https://www.tensorflow.org/mobile/tflite/&quot;&gt;TensorFlow Lite&lt;/a&gt; using a MobileNets&lt;sup id=&quot;fnref:fn9&quot;&gt;&lt;a href=&quot;#fn:fn9&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; style framework. My hope is that these new versions will improve performance during heavy occlusion or low light while reducing computational overhead. In theory, if this were ever implemented with permission from a city (and thus solar-powered), I could potentially use something more energy intensive such as an NVIDIA Jetson or similar IoT board. The combination of the increased horsepower, and reduced computational load would hopefully allow for a frame rate closer to 10Hz rather than the current 2Hz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Energy Storage and Connectivity&lt;/strong&gt; — Because I was flying under the radar during this project, I was limited in two areas; energy consumption and connectivity. Ideally I would have paired the 30,000mAh battery pack with a solar panel mounted on top. The solar panel would then power the Raspberry Pi and charge the battery pack during the day, while the battery pack alone would power it during the night and through overcast days.&lt;/p&gt;

&lt;p&gt;The issue of connectivity would become the next obstacle in long-term deployment. As it currently stands, I use a 128GB usb memory card to store all the trajectory data. I could have paid for a Raspberry Pi cellular data plan, but I completely expected my prototype to get stolen. Given the ideal situation of being able to connect to an ethernet line, indefinite deployment becomes an actual possibility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Camera Placement&lt;/strong&gt; — After a little trial and error, I discovered that the best position is ideally high over the center of the street with at least 100 yards of visibility. The hundred yards requirement was function of the slow frame rate of 2Hz. Presumably if I had faster hardware, I could increase the frame rate and reduce the required field of view. The elevation requirement is important because it reduces the occlusion, especially when there are multiple lanes of traffic. Lastly, I always tried to position the camera in a loosely northward facing direction and in close proximity to a street light. This allowed me to count traffic at night but also reduce the chances of incurring any glare or direct sun light which could wash out the images during the day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thermal Management&lt;/strong&gt; — The current version relies on passive cooling because weather sealing had the highest priority. Because of this limitation, I conservatively placed it in areas that were always shaded. This prevented me from measuring several road segments I was interested in but also forced me to get creative for others. If this were ever implemented with permission from a city, I would definitely build in a solar-powered fan for reducing mid-day heat buildup.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Overall I was really happy with the final results and I learned a lot about deploying a self-contained system into the wild. It would be nice to let this system harvest data for an extended period of time so that long-term trends could be accurately measured. With a system like this, a measurable impact of bike infrastructure investment could be generated. It could also provide the underlying data needed to justify new infrastructure proposals.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;deep learning raspberry pi traffic tracker in the wild&quot; title=&quot;deep learning raspberry pi traffic tracker in the wild&quot; src=&quot;/images/2019-02-06/VineSt-2018-07-25-17-34-59-25.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 9: Me taking a picture of a Raspberry Pi taking a picture of me&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;Cincinnati government/department of transportation get at me. I want to help!&lt;/p&gt;

&lt;h3 id=&quot;technical-notes&quot;&gt;Technical Notes&lt;/h3&gt;

&lt;p&gt;Within this section, I’ll cover the technical details in-depth. There are only a couple key components to my system, mainly the algorithm, training data, and hardware.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; — Using &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tzutalin/labelImg&quot;&gt;labelImg&lt;/a&gt;&lt;sup id=&quot;fnref:fn13&quot;&gt;&lt;a href=&quot;#fn:fn13&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;, I manually annotated examples of each class. This was fairly time-consuming, but it gave me good chuck of time to catchup on podcasts so it really wasn’t too bad. I could have been substituted this manual data annotation with existing datasets such as the &lt;a target=&quot;_blank&quot; href=&quot;http://www.vision.caltech.edu/Image_Datasets/CaltechPedestrians/&quot;&gt;Caltech Pedestrian Detection Benchmark&lt;/a&gt; or one of the &lt;a terget=&quot;_blank&quot; href=&quot;http://www.gavrila.net/Datasets/Daimler_Pedestrian_Benchmark_D/daimler_pedestrian_benchmark_d.html&quot;&gt;Daimler Pedestrian Benchmark Data Sets&lt;/a&gt; but one of my primary goals with this project was to start at zero and finish with a solid working solution. I was also concerned with the discrepancy of training on full color data but operating with the infrared data coming from the v2 NoIR image sensor. Lastly, I was also curious as to whether my dataset could help overcome some known shortcomings in regards to Faster R-CNN.&lt;sup id=&quot;fnref:fn3&quot;&gt;&lt;a href=&quot;#fn:fn3&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn4&quot;&gt;&lt;a href=&quot;#fn:fn4&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; Below are the results from my manual annotation. Note that images are captured and analyzed at 1280x720 resolution.&lt;/p&gt;

&lt;center&gt;
&lt;table style=&quot;width:250px;&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th style=&quot;text-align: left; padding-left:1em;&quot;&gt;&lt;strong&gt;Label&lt;/strong&gt;&lt;/th&gt;
            &lt;th style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;&lt;strong&gt;Annotations (#)&lt;/strong&gt;&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Pedestrians&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;59&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Bicycles&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;259&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Cars&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;593&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;SUVs&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;217&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Pickup Trucks&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;137&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;Trucks&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;229&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td style=&quot;text-align: left; padding-left:1em;&quot;&gt;&lt;strong&gt;All annotations&lt;/strong&gt;&lt;/td&gt;
            &lt;td style=&quot;text-align: center; padding-right:0.5em;&quot;&gt;&lt;strong&gt;1494&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
    &lt;figcaption&gt;Table 3: Manual annotations (based off 529 images)&lt;/figcaption&gt;
&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; — There are two primary parts to the tracking algorithm. The first is the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Deep_learning&quot;&gt;deep learning&lt;/a&gt; based object detection and localization. For this I utilized a TensorFlow based implementation of Faster R-CNN&lt;sup id=&quot;fnref:fn2&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;, which is the new and improved version of Fast R-CNN&lt;sup id=&quot;fnref:fn5&quot;&gt;&lt;a href=&quot;#fn:fn5&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;, which is the new and improved version of R-CNN&lt;sup id=&quot;fnref:fn6&quot;&gt;&lt;a href=&quot;#fn:fn6&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;. This particular implementation of Faster R-CNN was built on top of Res-Net101&lt;sup id=&quot;fnref:fn10&quot;&gt;&lt;a href=&quot;#fn:fn10&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; which had been trained on the COCO&lt;sup id=&quot;fnref:fn8&quot;&gt;&lt;a href=&quot;#fn:fn8&quot; class=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/sup&gt; data set. I could have went with a faster single shot detection (SSD) framework such as YOLO/YOLOv3&lt;sup id=&quot;fnref:fn11&quot;&gt;&lt;a href=&quot;#fn:fn11&quot; class=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/sup&gt;, but I was more concerned with positional accuracy&lt;sup id=&quot;fnref:fn1&quot;&gt;&lt;a href=&quot;#fn:fn1&quot; class=&quot;footnote&quot;&gt;12&lt;/a&gt;&lt;/sup&gt; because at the time my secondary goal was to measure vehicle/pedestrian speed. Training was carried out using the GeForce GTX 1050 GPU on my laptop which ended up taking roughly three hours.&lt;/p&gt;

&lt;p&gt;The second component is the tracking aspect of the algorithm. Once the objects in the current time frame have been detected and localized, they are clustered using &lt;a target=&quot;_blank&quot; href=&quot;means_clustering&quot;&gt;k-means&lt;/a&gt; over a time window of three frames. At an image capture rate of 2Hz, this translates to one second. This worked decently well for this initial prototype, but definitely has its limitations. I touch on several ways in which this can be improved [&lt;a href=&quot;#algo-improvements&quot;&gt;here&lt;/a&gt;]. Below I made a general flow chart depicting the tracking process.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;temporal clustering&quot; title=&quot;temporal clustering&quot; src=&quot;/images/2019-02-06/clustering.jpg&quot; /&gt;
        &lt;figcaption&gt;Figure 10: Tracking system&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Hardware&lt;/strong&gt; — This initial version uses the v2 Pi NoIR 8-megapixel/1080p30 (Sony IMX219 sensor) camera paired with the Raspberry Pi Zero. The lack of computing power resulted in the tracking algorithm unable to exceed a frame rate of 2Hz. All of this was powered by a 30,000mAh USB battery pack. In hindsight, I should have probably just gotten the Raspberry Pi 3 B+ with some kind of small industrial battery pack.&lt;/p&gt;

&lt;h3&gt;References&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn12&quot;&gt;
      &lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://miovision.com/wp-content/uploads/Accuracy_Comparison_of_Non_Intrusive_Automated_Traffic_Volume_Counting_Equipment_Alb-1.pdf&quot;&gt;&lt;i&gt;Accuracy Comparison of Non‐Intrusive, Automated Traffic Volume Counting Equipment&lt;/i&gt;&lt;/a&gt;. (October 2009) &lt;a href=&quot;#fnref:fn12&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn9&quot;&gt;
      &lt;p&gt;A. G. Howard, M. Zhu, B. Chen, D. Kalenichenko, W. Wang, T. Weyand, M. Andreetto, H. Adam, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1704.04861&quot;&gt;&lt;i&gt;MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications&lt;/i&gt;&lt;/a&gt;. (Submitted on 17 April 2017) &lt;a href=&quot;#fnref:fn9&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn13&quot;&gt;
      &lt;p&gt;TzuTa Lin, &lt;i&gt;LabelImg&lt;/i&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tzutalin/labelImg&quot;&gt;https://github.com/tzutalin/labelImg&lt;/a&gt;. (2015) &lt;a href=&quot;#fnref:fn13&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn3&quot;&gt;
      &lt;p&gt;L. Zhang, L. Lin, X. Liang, K. He, &lt;a target=&quot;_blankl&quot; href=&quot;https://arxiv.org/abs/1607.07032&quot;&gt;&lt;i&gt;Is Faster R-CNN Doing Well for Pedestrian Detection?&lt;/i&gt;&lt;/a&gt;. (Submitted on 24 July 2016) &lt;a href=&quot;#fnref:fn3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn4&quot;&gt;
      &lt;p&gt;C. Eggert, S. Brehm, A. Winschel, D. Zecha and R. Lienhart, &lt;a target=&quot;_blank&quot; href=&quot;https://ieeexplore.ieee.org/document/8019550/&quot;&gt;&lt;i&gt;A Closer Look: Small Object Detection in Faster R-CNN&lt;/i&gt;&lt;/a&gt;. 2017 IEEE International Conference on Multimedia and Expo (ICME), Hong Kong, 2017, pp. 421-426. &lt;a href=&quot;#fnref:fn4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn2&quot;&gt;
      &lt;p&gt;S. Ren, K. He, R. Girshick, J. Sun, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1506.01497&quot;&gt;&lt;i&gt;Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks&lt;/i&gt;&lt;/a&gt;. (Submitted on 4 June 2015) -&amp;gt; GitHub [&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/ShaoqingRen/faster_rcnn&quot;&gt;here&lt;/a&gt;] &lt;a href=&quot;#fnref:fn2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn5&quot;&gt;
      &lt;p&gt;R. Girshick, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1504.08083&quot;&gt;&lt;i&gt;Fast R-CNN&lt;/i&gt;&lt;/a&gt;. (Submitted on 30 April 2015) -&amp;gt; GitHub [&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rbgirshick/fast-rcnn&quot;&gt;here&lt;/a&gt;] &lt;a href=&quot;#fnref:fn5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn6&quot;&gt;
      &lt;p&gt;R. Girshick, J. Donahue, T. Darrell, J. Malik, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1311.2524&quot;&gt;&lt;i&gt;Rich feature hierarchies for accurate object detection and semantic segmentation&lt;/i&gt;&lt;/a&gt;. (Submitted on 11 November 2013) -&amp;gt; GitHub [&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/rbgirshick/rcnn&quot;&gt;here&lt;/a&gt;] &lt;a href=&quot;#fnref:fn6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn10&quot;&gt;
      &lt;p&gt;K. He, X. Zhang, S. Ren, J. Sun, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1512.03385&quot;&gt;&lt;i&gt;Deep Residual Learning for Image Recognition&lt;/i&gt;&lt;/a&gt;. Submitted on 10 December 2015) -&amp;gt; GitHub &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/KaimingHe/deep-residual-networks&quot;&gt;here&lt;/a&gt;] &lt;a href=&quot;#fnref:fn10&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn8&quot;&gt;
      &lt;p&gt;T. Lin, M. Maire, S. Belongie, L. Bourdev, R. Girshick, J. Hays, P. Perona, D. Ramanan, C. L. Zitnick, P. Dollár, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1405.0312&quot;&gt;&lt;i&gt;Microsoft COCO: Common Objects in Context&lt;/i&gt;&lt;/a&gt;. (Submitted on 1 May 2014) -&amp;gt; Data link [&lt;a target=&quot;_blank&quot; href=&quot;http://cocodataset.org&quot;&gt;here&lt;/a&gt;] &lt;a href=&quot;#fnref:fn8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn11&quot;&gt;
      &lt;p&gt;J. Redmon, A. Farhadi, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1804.02767&quot;&gt;&lt;i&gt;YOLOv3: An Incremental Improvement&lt;/i&gt;&lt;/a&gt;. (Submitted on 8 April 2018) &lt;a href=&quot;#fnref:fn11&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn1&quot;&gt;
      &lt;p&gt;J. Huang, V. Rathod, C. Sun, M. Zhu, A. Korattikara, A. Fathi, I. Fischer, Z. Wojna, Y. Song, S. Guadarrama, K. Murphy, &lt;a target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1611.10012&quot;&gt;&lt;i&gt;Speed/accuracy trade-offs for modern convolutional object detectors&lt;/i&gt;&lt;/a&gt;. (Submitted on 30 November 2016) &lt;a href=&quot;#fnref:fn1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Feb 2019 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2019-02-06/raspberry-pi-deep-learning-traffic-tracker/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2019-02-06/raspberry-pi-deep-learning-traffic-tracker/</guid>
      </item>
    
      <item>
        <title>Word2vec from Scratch with Python and NumPy</title>
        <description>&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - word2vec is awesome, it's also really simple. Learn how it works, and implement your own version.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Since joining a tech startup back in 2016, my life has revolved around machine learning and natural language processing (NLP). Trying to extract faint signals from terabytes of streaming social media is the name of the game. Because of this, I’m constantly experimenting and implementing different NLP schemes; word2vec being among the simplest and coincidently yielding great predictive value. The underpinnings of word2vec are exceptionally simple and the math is borderline elegant. The whole system is deceptively simple, and provides exceptional results. This tutorial aims to teach the basics of word2vec while building a barebones implementation in &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; using &lt;a target=&quot;_blank&quot; href=&quot;http://www.numpy.org/&quot;&gt;NumPy&lt;/a&gt;. Note that the final Python implementation will not be optimized for speed or memory usage, but instead for easy understanding.&lt;/p&gt;

&lt;p&gt;The goal with word2vec and most NLP embedding schemes is to translate text into vectors so that they can then be processed using operations from linear algebra. Vectorizing text data allows us to then create predictive models that use these vectors as input to then perform something useful. If you understand both forward and back propagation for plain &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Multilayer_perceptron&quot;&gt;vanella neural networks&lt;/a&gt;, you already understand 90% of word2vec.&lt;/p&gt;

&lt;h3&gt;It's Actually Really Simple (I promise!)&lt;/h3&gt;

&lt;p&gt;Word2vec is actually a collection of two different methods: continuous bag-of-words (CBOW) and skip-gram&lt;sup id=&quot;fnref:fn3&quot;&gt;&lt;a href=&quot;#fn:fn3&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Given a word in a sentence, lets call it w(t) (also called the &lt;i&gt;center word&lt;/i&gt; or &lt;i&gt;target word&lt;/i&gt;), CBOW uses the &lt;i&gt;context&lt;/i&gt; or surrounding words as input. For instance, if the context window &lt;i&gt;C&lt;/i&gt; is set to C=5, then the input would be words at positions w(t-2), w(t-1), w(t+1), and w(t+2). Basically the two words before and after the center word w(t). Given this information, CBOW then tries to predict the target word.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;word2vec network architecture&quot; title=&quot;word2vec network architecture&quot; src=&quot;/images/2018-03-22/word2vec_network_architecture.png&quot; /&gt;
        &lt;figcaption&gt;Figure 1: word2vec CBOW and skip-gram network architectures&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The second method, skip-gram is the exact opposite. Instead of inputting the context words and predicting the center word, we feed in the center word and predict the context words. This means that w(t) becomes the input while w(t-2), w(t-1), w(t+1), and w(t+2) are the ideal output. For for this post, we’re only going to consider the skip-gram model since it has been shown to produce better word-embeddings than CBOW.&lt;/p&gt;

&lt;p&gt;The concept of a center word surrounded by context words can be likened to a sliding window that travels across the text corpus. As an example, lets encode the following sentence: &lt;i&gt;“the quick brown fox jumps over the lazy dog”&lt;/i&gt; using a window size of C=5 (two before, and two after the center word). As the context window slides across the sentence from left to right, it gets populated with the corresponding words. When the context window reaches the edges of the sentences, it simply drops the furthest window positions. Below is what this process looks like. Note that instead of w(t), w(t+1), etc., the center word has become x&lt;sub&gt;k&lt;/sub&gt; and the context words have become y&lt;sub&gt;c&lt;/sub&gt;.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;text encoding&quot; title=&quot;text encoding&quot; src=&quot;/images/2018-03-22/text-example.png&quot; /&gt;
        &lt;figcaption&gt;Figure 2: a sliding window example&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;Because we can’t send text data directly through a matrix, we need to employ &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/One-hot&quot;&gt;one-hot encoding&lt;/a&gt;. This means we have a vector of length &lt;i&gt;v&lt;/i&gt; where v is the total number of unique words in the text corpus (or shorter if we want). Each word corresponds to a single position in this vector, so when embedding the word v_n, everywhere in vector v is zero except v_n which becomes a one. Below in Figure 3, a one-hot encoding of examples 1, 5, and 9 from Figure 2 above.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;one-hot encoding&quot; id=&quot;figure-3&quot; title=&quot;one-hot encoding&quot; src=&quot;/images/2018-03-22/training-data.png&quot; /&gt;
        &lt;figcaption&gt;Figure 3: one-hot encoding&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;→ For future reference, the column vectors &lt;equation class=&quot;has-jax&quot;&gt;\( y_{c=1},...,y_{c=C} \)&lt;/equation&gt; are referred to as &lt;b&gt;&lt;i&gt;panels&lt;/i&gt;&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;So far, so good right? Now we need to feed this data into the network and train it. Most of the literature describing skip-gram uses the same graphic depicting the final layer of the model somehow having three or more matrices. I found this rather confusing while I was reading the white papers so I ended up digging through the &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tmikolov/word2vec&quot;&gt;original source code&lt;/a&gt; to get to the bottom of it. I figure there are other people like me, so I created another version of the architecture that I find a little easier to digest.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img id=&quot;figure-4&quot; alt=&quot;skip-gram network architecture&quot; title=&quot;skip-gram network architecture&quot; src=&quot;/images/2018-03-22/skip-gram-architecture.png&quot; /&gt;
        &lt;figcaption&gt;Figure 4: skip-gram network architecture&lt;/figcaption&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;h3&gt;Forward Pass&lt;/h3&gt;

&lt;p&gt;Now that the text data has been encoded, lets proceed through a single forward pass of the network. Step one is getting to the hidden layer &lt;i&gt;h&lt;/i&gt;.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ h = x^T W $$&lt;/equation&gt;

&lt;p&gt;Since &lt;equation class=&quot;has-jax&quot;&gt;\( x \)&lt;/equation&gt; is a one-hot encoded vector, &lt;equation class=&quot;has-jax&quot;&gt;\( h \)&lt;/equation&gt; is simply the &lt;equation class=&quot;has-jax&quot;&gt;\( k^{th} \)&lt;/equation&gt; row of matrix &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt;.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ h = W_{(k,:)}^T := v_{w_I}^T $$&lt;/equation&gt;

&lt;p&gt;Preceding forward, we need to calculate the values as they exit the network.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ u_c = W^{\prime T}  h = W^{\prime T} W^T x$$&lt;/equation&gt;

&lt;p&gt;Although &lt;equation class=&quot;has-jax&quot;&gt;\( u_c \)&lt;/equation&gt; gets us through the network, we need to apply a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Softmax_function&quot;&gt;softmax&lt;/a&gt; function. The softmax will compress each element of &lt;equation class=&quot;has-jax&quot;&gt;\( u_c \)&lt;/equation&gt; to a range of [0,1] while also forcing the sum of &lt;equation class=&quot;has-jax&quot;&gt;\( u_c \)&lt;/equation&gt; to equal one. This will help in computing network error and backpropagation later on.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ 
    \begin{align}
    y_c &amp;amp; = Softmax(u) \\[1.5em] 
    p \left( w_{c,j} = w_{O,c} | w_I \right) &amp;amp; = y_{c,j} = \frac{exp(u_{c,j})}{\sum_{j^\prime=1}^V exp(u_{j^\prime})} 
    \end{align}
$$&lt;/equation&gt;

&lt;p&gt;For each one-hot encoded center word &lt;equation class=&quot;has-jax&quot;&gt;\( x \)&lt;/equation&gt;, matrix &lt;equation class=&quot;has-jax&quot;&gt;\( W^\prime \)&lt;/equation&gt; will output a certain set of values. This means that all the panels associated with center word &lt;equation class=&quot;has-jax&quot;&gt;\( x \)&lt;/equation&gt; share the same input values, thus:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ u_{c,j} = u_j = {v_{w_j}^{\prime}}^T \cdot h \qquad \text{for} \; c = 1,2,...,C $$&lt;/equation&gt;

&lt;p&gt;where &lt;equation class=&quot;has-jax&quot;&gt;\( v_{w_j}^{\prime} \)&lt;/equation&gt; is the output vector of the j-th word in the vocabulary, &lt;equation class=&quot;has-jax&quot;&gt;\( w_j \)&lt;/equation&gt;. Again because we’re dealing with one-hot encodings, this means &lt;equation class=&quot;has-jax&quot;&gt;\( v_{w_j}^{\prime} \)&lt;/equation&gt; is a column vector taken from the hidden → output matrix &lt;equation class=&quot;has-jax&quot;&gt;\( W^{\prime} \)&lt;/equation&gt;. Refer to &lt;a href=&quot;#figure-4&quot;&gt;figure-4&lt;/a&gt; for clarity.&lt;/p&gt;

&lt;p&gt;In code, this will take the form of the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# FORWARD PASS
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward_pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;u_c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y_c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;softmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With the softmax calculation taking the form of:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# SOFTMAX ACTIVATION FUNCTION
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;softmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;e_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The forward pass is fairly simple and differs little from that of a standard, fully connected neural network.&lt;/p&gt;

&lt;h3&gt; Backpropagation &amp;amp; Training&lt;/h3&gt;
&lt;p&gt;Now to improve the weights within &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt; and &lt;equation class=&quot;has-jax&quot;&gt;\( W^{\prime} \)&lt;/equation&gt; we’re going to use &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Stochastic_gradient_descent&quot;&gt;stochastic gradient decent&lt;/a&gt; (SGD) to &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Backpropagation&quot;&gt;backpropagate&lt;/a&gt; the errors, which means we need to calculate the loss on the output layer.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ 
    \begin{align}
    E &amp;amp; = - \log \mathbb P ( w_{O,1}, w_{O,2},...,w_{O,c} | w_I ) \\[1.5em]
    &amp;amp; = -\log \prod_{c=1}^C \frac{ \exp(u_{c,j_c^*})}{\sum_{j^{\prime}=1}^V \exp(u_{j^{\prime}})} \\[1.5em]
    &amp;amp; = - \sum_{c=1}^C u_{j_c^*} + C \cdot \log \sum_{j^{\prime}=1}^V \exp(u_{j^{\prime}})
    \end{align}
$$&lt;/equation&gt;

&lt;p&gt;where &lt;equation class=&quot;has-jax&quot;&gt;\( j_c^* \)&lt;/equation&gt; represents the index of the actual c-th output context word in the vocabulary.&lt;/p&gt;

&lt;p&gt;Now that the loss has been calculated, we’re going to employ the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Chain_rule&quot;&gt;chain rule&lt;/a&gt; to distribute the error amongst the weight matrices &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt; and &lt;equation class=&quot;has-jax&quot;&gt;\( W^{\prime} \)&lt;/equation&gt;. First step is taking the derivative of &lt;equation class=&quot;has-jax&quot;&gt;\( E \)&lt;/equation&gt; with respect to every element on every panel of the output layer &lt;equation class=&quot;has-jax&quot;&gt;\( u_{c,j} \)&lt;/equation&gt;.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ \frac{\partial E}{\partial u_{c,j}} = y_{c,j} - t_{c,j} := e_{c,j} $$&lt;/equation&gt;

&lt;p&gt;Where &lt;equation class=&quot;has-jax&quot;&gt;\( t_{c,j} \)&lt;/equation&gt; is the ground truth for that particular panel. To simplify the notation going forward, we’ll define the following:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ 
    EI_j = \sum_{c=1}^C e_{c,j} = \sum_{c=1}^C \left( y_{c,j} - t_{c,j} \right) = \frac{\partial E}{\partial u_j} \tag{2}
$$&lt;/equation&gt;

&lt;p&gt;The column vector &lt;equation class=&quot;has-jax&quot;&gt;\( EI_j \)&lt;/equation&gt; represents the row-wise sum of the prediction errors across each context word panel for the current center word. Proceeding backwards, we need to take the derivative of E with respect to &lt;equation class=&quot;has-jax&quot;&gt;\( W^{\prime} \)&lt;/equation&gt; representing the output → hidden matrix.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ 
    \begin{align}
    \frac{\partial E}{\partial w_{ij}^{\prime}} &amp;amp; = \sum_{c=1}^C \frac{\partial E}{\partial u_{c,j}}  \cdot \frac{\partial u_{c,j}}{\partial w_{i,j}^{\prime}} \\[1.5em]
    &amp;amp; = \sum_{c=1}^C \left( y_{c,j} - t_{c,j} \right) \\[1.5em]
    &amp;amp; = EI_j \cdot h_i
    \end{align}
$$ &lt;/equation&gt;

&lt;p&gt;Therefore, the gradient decent update equation for &lt;equation class=&quot;has-jax&quot;&gt;\( W^{\prime} \)&lt;/equation&gt; becomes:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ w_{i,j}^{\prime (new)} = w_{i,j}^{\prime (old)} - \eta \cdot EI_j \cdot h_i $$&lt;/equation&gt;

&lt;p&gt;Note that &lt;equation class=&quot;has-jax&quot;&gt;\( \eta \)&lt;/equation&gt; is the learning rate. Next, lets formulate the error update equation for the input → hidden layer &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt; weights by deriving the error with respect to the hidden layer.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ 
    \begin{align}
    \frac{\partial E}{\partial h_{i}} &amp;amp; = \sum_{j=1}^V \frac{\partial E}{\partial u_j} \cdot \frac{\partial u_j}{\partial h_i} \\[1em]
    &amp;amp; = \sum_{j=1}^V EI_j \cdot w_{ij}^\prime \\
    \end{align}
$$&lt;/equation&gt;

&lt;p&gt;This allows us to then calculate the loss with respect to &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt;.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$
    \begin{align}
    \frac{\partial E}{\partial W_{ki}} &amp;amp; = \frac{\partial E}{\partial h_i} \cdot \frac{\partial h_i}{\partial w_{ki}} \\[1em]
     &amp;amp; = \sum_{j=1}^V EI_j \cdot w_{ij}^{\prime} \cdot x_k
    \end{align}
$$&lt;/equation&gt;

&lt;p&gt;and finally, we can formulate the gradient decent weight update equation for &lt;equation class=&quot;has-jax&quot;&gt;\( W \)&lt;/equation&gt;.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ w_{ij}^{(new)} = w_{ij}^{(old)} - \eta \cdot \sum_{j=1}^V EI_j \cdot w_{ij}^{\prime} \cdot x_j $$&lt;/equation&gt;

&lt;p&gt;At this point, everything needed to train the network has been established and we just need to code it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# TRAIN W2V model
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;training_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# INITIALIZE WEIGHT MATRICES
&lt;/span&gt;    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# context matrix
&lt;/span&gt;    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# embedding matrix
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# CYCLE THROUGH EACH EPOCH
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# CYCLE THROUGH EACH TRAINING SAMPLE
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w_c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;training_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# FORWARD PASS
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;y_pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forward_pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# CALCULATE ERROR
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y_pred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# BACKPROPAGATION
&lt;/span&gt;            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backprop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# CALCULATE LOSS
&lt;/span&gt;            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EPOCH:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LOSS:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where the backpropagation function is defined as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# BACKPROPAGATION
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;backprop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dl_dw2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;dl_dw1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# UPDATE WEIGHTS
&lt;/span&gt;    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dl_dw1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dl_dw2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it! Only slightly more complicated than a simple neural network. To avoid posting redundant sections of code, you can find the completed word2vec model along with some additional features at this GitHub repo (&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/nathanrooy/word2vec-from-scratch-with-python/blob/master/word2vec.py&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;h3&gt;Results&lt;/h3&gt;

&lt;p&gt;As a simple sanity check, lets look at the network output given a few input words. This is the output after 5000 iterations.&lt;/p&gt;

&lt;table class=&quot;results-table&quot; style=&quot;width:100%; border-spacing: 20px 0px; text-align:center&quot;&gt;
   &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&quot;text-align:center;border-right: 1px solid black;&quot;&gt;&lt;strong&gt;Input word&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;brown&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;dog&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;fox&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;jumps&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;lazy&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;over&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;quick&lt;/strong&gt;&lt;/th&gt;
          &lt;th style=&quot;text-align:center;&quot;&gt;&lt;strong&gt;the&lt;/strong&gt;&lt;/th&gt;
       &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody style=&quot;font-size:11px; text-align:center;&quot;&gt;
      &lt;tr&gt;
          &lt;td style=&quot;color:#9f1f63; font-size:14px; border-right: 1px solid black;&quot;&gt;fox&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;2.45e-01&lt;/td&gt;
          &lt;td&gt;4.34e-04&lt;/td&gt;
          &lt;td&gt;4.45e-04&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white; margin-right:5px;&quot;&gt;2.53e-01&lt;/td&gt;
          &lt;td&gt;2.34e-05&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;2.53e-01&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;2.45e-01&lt;/td&gt;
          &lt;td&gt;7.62e-07&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&quot;color:#9f1f63; font-size:14px; border-right: 1px solid black;&quot;&gt;lazy&lt;/td&gt;
          &lt;td&gt;5.81e-05&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;3.32e-01&lt;/td&gt;
          &lt;td&gt;2.42e-04&lt;/td&gt;
          &lt;td&gt;1.11e-05&lt;/td&gt;
          &lt;td&gt;1.91e-04&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;3.33e-01&lt;/td&gt;
          &lt;td&gt;4.51e-04&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;3.33e-01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&quot;color:#9f1f63; font-size:14px; border-right: 1px solid black;&quot;&gt;dog&lt;/td&gt;
          &lt;td&gt;1.85e-07&lt;/td&gt;
          &lt;td&gt;3.17e-04&lt;/td&gt;
          &lt;td&gt;1.31e-03&lt;/td&gt;
          &lt;td&gt;1.29e-04&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;4.98e-01&lt;/td&gt;
          &lt;td&gt;1.42e-05&lt;/td&gt;
          &lt;td&gt;4.86e-06&lt;/td&gt;
          &lt;td style=&quot;background-color:#13a89e; color:white;&quot;&gt;4.99e-01&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;These sample results show that the output probabilities for each center word are split fairly evenly between the correct context word. If we narrow in on the word &lt;strong&gt;&lt;i&gt;lazy&lt;/i&gt;&lt;/strong&gt;, we can see that the probabilities for the words &lt;strong&gt;&lt;i&gt;dog&lt;/i&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;i&gt;over&lt;/i&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;i&gt;the&lt;/i&gt;&lt;/strong&gt; are split fairly evenly at roughly 33.33% each. This is exactly what we want.&lt;/p&gt;

&lt;h3&gt;Improvements&lt;/h3&gt;

&lt;p&gt;Shortly after the initial release of word2vec, a second paper detailing several improvements was published.&lt;sup id=&quot;fnref:fn2&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Amongst these proposed improvements are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phrase Generation&lt;/strong&gt; — This is the process in which commonly co-occuring words such as “san” and “francisco” become “san_francisco”. The result of phrase generation is a cleaner, more useful, and user-friendly vocabulary list. Phrase generation is based on the following equation which utilizes the unigram and bigram vocabulary counts for the given corpus.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ score(w_a, w_b) = \frac{count(w_aw_b) - \delta}{count(w_a) \times count(w_b)} $$&lt;/equation&gt;

&lt;p&gt;The numerator consists of the total number of times the bigram formed with words &lt;equation class=&quot;has-jax&quot;&gt;\( w_a \)&lt;/equation&gt; and &lt;equation class=&quot;has-jax&quot;&gt;\( w_b \)&lt;/equation&gt; appears in the corpus. This is then divided by the counts of &lt;equation class=&quot;has-jax&quot;&gt;\( w_a \)&lt;/equation&gt; multiplied by &lt;equation class=&quot;has-jax&quot;&gt;\( w_b \)&lt;/equation&gt;. The variable &lt;equation class=&quot;has-jax&quot;&gt;\( \delta \)&lt;/equation&gt; is referred to as the &lt;i&gt;discounting coefficient&lt;/i&gt; and prevents the formation of word phrases consisting of very infrequent words.&lt;sup id=&quot;fnref:fn2:1&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;For longer word combinations such as “new york city”, an iterative phrase generation approach can be used. As an example, on the initial pass “new” and “york” could be combined into “new_york”, with a second pass combining “new_york” with “city” yielding the desired phrase “new_york_city”. According to Mikolov et al. (&lt;a href=&quot;#fn:fn2&quot;&gt;2013&lt;/a&gt;), typically 2-4 passes with decreasing threshold values yielded the best results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Subsampling&lt;/strong&gt; — The purpose of subsampling is to counter the balance between frequent and rare words. No single word should represent a sizable portion of the corpus. To correct for this all words are discarded based on the following probability:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ P \left( w_i \right) = 1 - \sqrt{\frac{t}{f \left( w_i \right)}} $$&lt;/equation&gt;

&lt;p&gt;Where &lt;equation class=&quot;has-jax&quot;&gt;\( f(w_i) \)&lt;/equation&gt; is the frequency of word &lt;equation class=&quot;has-jax&quot;&gt;\( w_i \)&lt;/equation&gt; and &lt;equation class=&quot;has-jax&quot;&gt;\( t \)&lt;/equation&gt; is a user specified threshold. In Mikolov et al. (&lt;a href=&quot;#fn:fn2&quot;&gt;2013&lt;/a&gt;), values for &lt;equation class=&quot;has-jax&quot;&gt;\( t \)&lt;/equation&gt; were typically around 10&lt;sup&gt;-5&lt;/sup&gt;. As pointed out &lt;a target=&quot;_blank&quot; href=&quot;http://mccormickml.com/2017/01/11/word2vec-tutorial-part-2-negative-sampling/&quot;&gt;here&lt;/a&gt;, this probability calculation differs from the &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/tmikolov/word2vec&quot;&gt;official word2vec C implementation&lt;/a&gt;. Below is the modified equation found in the C implementation:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ P(w_i) = \left( \sqrt{\frac{z(w_i)}{0.001}} + 1 \right) \times \frac{0.001}{z(w_i)} $$&lt;/equation&gt;

&lt;p&gt;Where &lt;equation class=&quot;has-jax&quot;&gt;\( z(w_i) \)&lt;/equation&gt; is the fraction of the corpus represented by the word &lt;equation class=&quot;has-jax&quot;&gt;\( w_i \)&lt;/equation&gt;. The higher &lt;equation class=&quot;has-jax&quot;&gt;\( P(w_i) \)&lt;/equation&gt; is, the greather the chances are of keeping &lt;equation class=&quot;has-jax&quot;&gt;\( w_i \)&lt;/equation&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Negative Sampling&lt;/strong&gt; — Often referred to as just NEG, this is a modification to the backpropagation procedure in which only a small percentage of the errors are actually considered. For instance, using example #9 from &lt;a href=&quot;#figure-3&quot;&gt;figure 3&lt;/a&gt; above, &lt;strong&gt;&lt;i&gt;dog&lt;/i&gt;&lt;/strong&gt; is the target word, while &lt;strong&gt;&lt;i&gt;the&lt;/i&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;i&gt;lazy&lt;/i&gt;&lt;/strong&gt; are the context words. This means that in an ideal situation, the network will return a “0” for everything except for &lt;strong&gt;&lt;i&gt;the&lt;/i&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;i&gt;lazy&lt;/i&gt;&lt;/strong&gt; which will be “1”. In short, context words become “positive” while everything else becomes “negative”. With negative sampling, we only concern ourselves with the positive words and only a small percentage of the negative words. This means that instead of backpropagating the errors from all 8 words in the vocabulary, we backpropagate the errors from the positive words &lt;strong&gt;&lt;i&gt;the&lt;/i&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;i&gt;lazy&lt;/i&gt;&lt;/strong&gt; plus &lt;equation class=&quot;has-jax&quot;&gt;\( k \)&lt;/equation&gt; negative words. Because the vocabulary size in this example is only 8, the advantage of negative sampling may not be immediately apparent. Now, imagine for a moment that you have a corpus that yielded billions of training samples, you’ve had to clip your vocabulary to 10,000 words and your embedding vector length is 300. With negative sampling we’re updating a few positive words, and a few negative words (lets say &lt;equation class=&quot;has-jax&quot;&gt;\( k = 10\)&lt;/equation&gt;) which translates to only 3,000 individual weights in W&lt;sup&gt;’&lt;/sup&gt;. This represents 0.1% of the 3 million weight values we would otherwise be updating without negative sampling!&lt;/p&gt;

&lt;p&gt;The probability that a negative word is chosen is determined using the following equation:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ \log p(w|w_I) = \log \sigma (v_w^{\prime T} v_{w_I}) + \sum_{i=k}^K E_{w_i ~ P_n(w)} [\log \sigma(-v_w^{\prime T} v_{w_I})]$$&lt;/equation&gt;

&lt;p&gt;As we can see, the primary difference between this and the standard stochastic gradient decent version is that now we include K observations. As for how large k should be, Mikolov et al. had this to say:&lt;/p&gt;

&lt;blockquote&gt;
    Our experiments indicate that values of &lt;i&gt;k&lt;/i&gt; in the range 5–20 are useful for small training datasets, while for large datasets the &lt;i&gt;k&lt;/i&gt; can be as small as 2–5. 
    &lt;p style=&quot;text-align:right; padding-bottom:0;&quot;&gt;- Mikolov et al. (&lt;a href=&quot;#fn:fn2&quot;&gt;2013&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Something to keep in mind however is that the official C implementation uses a slightly different formulation as seen below&lt;sup id=&quot;fnref:fn5&quot;&gt;&lt;a href=&quot;#fn:fn5&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ P(w_i) = \frac{f(w_i)^{3/4}}{\sum_{j=0}^n \left( f(w_j)^{3/4} \right)} $$&lt;/equation&gt;

&lt;p&gt;Note that even without negative sampling, only the weights for the target word in matrix W are updated.&lt;/p&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Thanks for reading, I hope you found this useful! If anything still seems unclear, please let me know so I can improve this tutorial. For further reading, I highly suggest working through each of the references below.&lt;/p&gt;

&lt;h3&gt;References&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn3&quot;&gt;
      &lt;p&gt;Tomas Mikolov, Kai Chen, Greg Corrado, Jeffrey Dean. &lt;a class=&quot;inline_link&quot; target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1301.3781&quot;&gt;Efficient Estimation of Word Representations in Vector Space&lt;/a&gt; (Submitted on 16 Jan 2013) &lt;a href=&quot;#fnref:fn3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn2&quot;&gt;
      &lt;p&gt;Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Corrado, Jeffrey Dean. &lt;a class=&quot;inline_link&quot; target=&quot;_blank&quot; href=&quot;https://arxiv.org/abs/1310.4546&quot;&gt;Distributed Representations of Words and Phrases and their Compositionality&lt;/a&gt; (Submitted on 16 Oct 2013) &lt;a href=&quot;#fnref:fn2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:fn2:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn5&quot;&gt;
      &lt;p&gt;Chris McCormick. &lt;a target=&quot;_blank&quot; href=&quot;http://mccormickml.com/2017/01/11/word2vec-tutorial-part-2-negative-sampling/&quot;&gt;Word2Vec Tutorial Part 2 - Negative Sampling&lt;/a&gt; (January 11, 2017) &lt;a href=&quot;#fnref:fn5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 22 Mar 2018 00:00:00 -0400</pubDate>
        <link>https://nathanrooy.github.io//posts/2018-03-22/word2vec-from-scratch-with-python-and-numpy/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2018-03-22/word2vec-from-scratch-with-python-and-numpy/</guid>
      </item>
    
      <item>
        <title>Chili Regions of Cincinnati [two year update]</title>
        <description>&lt;p&gt;Roughly two yeas ago I wrote my &lt;a target=&quot;_blank&quot; href=&quot;https://nathanrooy.github.io/posts/2016-02-03/chili-regions-of-cincinnati/&quot;&gt;first post&lt;/a&gt; on here, in which I created a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Voronoi_diagram&quot;&gt;voronoi diagram&lt;/a&gt; depicting the chili regions of Cincinnati. Each region corresponded to being closer to either &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Skyline_Chili&quot;&gt;Skyline Chili&lt;/a&gt; or &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Gold_Star_Chili&quot;&gt;Gold Star Chili&lt;/a&gt;. Since a voronoi tessellation is based off &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Euclidean_distance&quot;&gt;Euclidean distance&lt;/a&gt; (“as the crow flies”), its usefulness diminishes considerably when applied to street networks. Because we’re not yet traveling around using jetpacks, I modified the distance function to use something called &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Shortest_path_problem&quot;&gt;network distance&lt;/a&gt; which is calculated using &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&quot;&gt;Dijkstra’s algorithm&lt;/a&gt;. As the name implies, it’s the length as traveled through a network, in this case, the roads and sidewalks from the &lt;a target=&quot;_blank&quot; href=&quot;https://www.openstreetmap.org&quot;&gt;OpenStreetMaps&lt;/a&gt; database. All calculations were completed using a &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; script I wrote. Additionally, since its been two years and some locations have come and gone, I scraped the locations of Skyline and Gold Star from Google Maps and updated accordingly. Once all the data was ready, it was combined with geometry downloaded from the Cincinnati Area GIS (&lt;a target=&quot;_blank&quot; href=&quot;http://cagismaps.hamilton-co.org/cagisportal/&quot;&gt;CAGIS&lt;/a&gt;) web site, assembled in &lt;a target=&quot;_blank&quot; href=&quot;https://qgis.org&quot;&gt;QGIS&lt;/a&gt;, and finished off in Adobe Illustrator.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;a target=&quot;blank&quot; href=&quot;/images/2018-02-01/chili-regions-cincinnati-1200.png&quot;&gt;
            &lt;img alt=&quot;chili regions of cincinnati&quot; title=&quot;chili regions of cincinnati population&quot; src=&quot;/images/2018-02-01/chili-regions-cincinnati-1200.png&quot; /&gt;
        &lt;/a&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;a target=&quot;_blank&quot; href=&quot;/images/2018-02-01/chili-regions-hamilton-county-1200.png&quot;&gt;
            &lt;img alt=&quot;chili regions of hamilton county&quot; title=&quot;chili regions of cincinnati population&quot; src=&quot;/images/2018-02-01/chili-regions-hamilton-county-1200.png&quot; /&gt;
        &lt;/a&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;The one real addition to this two year update is the chart below. Using the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Census_block&quot;&gt;U.S. census blocks&lt;/a&gt; from &lt;a target=&quot;_blank&quot; href=&quot;https://www.census.gov/geo/maps-data/data/tiger-data.html&quot;&gt;2010&lt;/a&gt;, CAGIS neighborhood boundaries, and the chili region contours, I calculated the number people in each chili region as a percent of total population in that neighborhood.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;a target=&quot;blank&quot; href=&quot;/images/2018-02-01/chili-regions-population-table.png&quot;&gt;
            &lt;img alt=&quot;chili regions of cincinnati population&quot; title=&quot;chili regions of cincinnati population&quot; src=&quot;/images/2018-02-01/chili-regions-population-table.png&quot; /&gt;
        &lt;/a&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Feb 2018 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2018-02-01/chili-regions-of-cincinnati-updated/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2018-02-01/chili-regions-of-cincinnati-updated/</guid>
      </item>
    
      <item>
        <title>The Beautiful Commute: Visualizing one full year of bike commuting in Cincinnati</title>
        <description>&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - I mapped out an entire year of biking to and from work here in Cincinnati.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;2017 was an interesting year in terms of my daily commute. Although I unfortunately own a car, I refuse to waste my life mired in a quagmire of traffic like some kind of suburban commuter. This means I’m biking everywhere, or taking transit. But not like one of those weird weekend warriors dressed head to toe in fluorescent lycra, more like hoodie and sweat pants. What made 2017 interesting was the fact that not only did I move around several times, but being apart of a rapidly growing tech startup, so did my office.&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img src=&quot;/images/2018-01-11/commutes-table.png&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;p&gt;Some highlights:&lt;/p&gt;
&lt;ul class=&quot;ul-style-b&quot;&gt;
    &lt;li&gt;Total distance: 1,407 miles&lt;/li&gt;
    &lt;li&gt;Total elevation: 93,009 ft&lt;/li&gt;
    &lt;li&gt;Longest commute (one-way): ~8 miles&lt;/li&gt;
    &lt;li&gt;Shortest commute (one-way): ~2 miles&lt;/li&gt;
    &lt;li&gt;Coldest day: -3°F&lt;/li&gt;
    &lt;li&gt;Hottest day: 92°F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best part about commuting via bike was once my one-way commute distance dropped below about four miles, it ended up being just a quick as driving! This was due to the fact that traffic doesn’t exist when you’re on a bike, neither does parking. The biking advantage increases even more during inclement weather, since Cincinnati residents still haven’t figured out how to drive correctly when it rains or snows. Lastly, one of the more salient aspects of bike commuting is that even if it takes a little bit longer to commute, I end up having more free time because I don’t have to waste time outside of work going to the gym. I basically gained an extra hour, every day of the work week.&lt;img class=&quot;emoji&quot; src=&quot;/assets/emojis/emoji-biking.png&quot; style=&quot;height:1em&quot; /&gt;&lt;img class=&quot;emoji&quot; src=&quot;/assets/emojis/emoji-ok-hand.png&quot; style=&quot;height:1em&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I captured location data using the &lt;a target=&quot;_blank&quot; href=&quot;https://www.strava.com/&quot;&gt;Strava&lt;/a&gt; app running on my phone. At the end of the year I wrote a quick &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; script that scraped all my data from the Strava web page and converted the GPX files into &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/GeoJSON&quot;&gt;GeoJSON&lt;/a&gt; files so they could be imported into &lt;a target=&quot;_blank&quot; href=&quot;https://qgis.org&quot;&gt;QGIS&lt;/a&gt; for rendering. Note that in the images below, all the detours are due to grocery shopping, meeting up with friends, bars, etc. Or if it was a nice day out, I probably took the long way home. Cyan represents the morning commute while magenta represents the evening commute.&lt;/p&gt;

&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;window.jQuery || document.write('&lt;script src=&quot;_/js/libs/jquery-1.9.1.min.js&quot;&gt;&lt;\/script&gt;')&lt;/script&gt;

&lt;center&gt;
    &lt;div class=&quot;photoset-grid-lightbox&quot; data-layout=&quot;2132&quot;&gt;
        &lt;img src=&quot;/images/2018-01-11/02_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/03_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/01_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/04_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/05_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/06_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/08_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
        &lt;img src=&quot;/images/2018-01-11/09_blog.jpg&quot; width=&quot;1200&quot; height=&quot;800&quot; /&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;script src=&quot;/assets/js/jquery.photoset-grid.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/js/jquery.colorbox.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
$('.photoset-grid-lightbox').photosetGrid({
  highresLinks: true,
  rel: 'withhearts-gallery',
  gutter: '5px',

  onComplete: function(){
    $('.photoset-grid-lightbox').attr('style', '');
    $('.photoset-grid-lightbox a').colorbox({
      photo: true,
      scalePhotos: true,
      maxHeight:'90%',
      maxWidth:'90%'
    });
  }
});
&lt;/script&gt;

&lt;p&gt;Another reason I was interested in mapping out all my bike commutes is because people in Cincinnati view the concept of walking or biking short distances instead of driving about as foreign a concept as high energy particle physics. These short trips would include going to the grocery store, the park, gym, work, school, etc. Besides reducing traffic and pollution, people who bike or walk to work are &lt;a target=&quot;blank&quot; href=&quot;https://www.youtube.com/watch?v=vyKj-WsStFc&quot;&gt;happier&lt;/a&gt; and &lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v=KTT7i3SKpMQ&quot;&gt;healhier&lt;/a&gt; than those who choose to drive. It’s also patently more fun than traveling around in a tin can.&lt;/p&gt;

&lt;p&gt;Unfortunately, because Cincinnati resides squarely in the middle of flyover country, residents here have a fairly uncultured outlook on biking. As such, biking in Cincinnati falls into two main stereotypes. Either you’re privileged enough to live close to where you work or you’re a failure because you can’t afford a car. This regressive mindset means Cincinnati lags substantially behind most cities when we should be thriving. Cincinnati is an ideal biking city. It’s compact, the weather is mild. The hills are short, with plenty of alternate routes. As I’ve illustrated above, all it takes is the motivation to not be a car dependent slob. If I can do it, literally anyone can do it!&lt;/p&gt;

&lt;p&gt;When I moved back to Cincinnati last year, I regrettably had to spend the first three months living amongst the normies out in Hyde Park. While I was there, I couldn’t help but notice that I was basically the only one commuting and getting groceries via bicycle. Because of this, I began mentally recording the excuses my neighbors and other suburban residents would make in order to justify their unparalleled laziness. Now after a year of living in several of Cincinnati’s neighborhoods, I have accumulated a wide sampling of excuses. Here are some of the most common ones I heard (which are not real excuses whatsover):&lt;/p&gt;

&lt;ul class=&quot;ul-style-b&quot;&gt;
    &lt;li&gt;I work too far away...&lt;/li&gt;
    &lt;li&gt;I have to &lt;a target=&quot;_blank&quot; href=&quot;https://bicycles.stackexchange.com/questions/32131/how-to-commute-to-work-on-your-bike-and-dress-up&quot;&gt;dress up for work&lt;/a&gt;...&lt;/li&gt;
    &lt;li&gt;My job is exhausting, the last thing I want to do is bike home...&lt;/li&gt;
    &lt;li&gt;Hills...&lt;/li&gt;
    &lt;li&gt;It's too hot...&lt;/li&gt;    
    &lt;li&gt;&lt;a target=&quot;blank&quot; href=&quot;http://peopleforbikes.org/blog/dashing-through-the-snow-winter-bike-commuting-basics/&quot;&gt;It's too cold&lt;/a&gt;...&lt;/li&gt;
    &lt;li&gt;It's raining...&lt;/li&gt;
    &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.columbusunderground.com/health-and-wellness-tips-for-winter-bike-riding&quot;&gt;It's snowing...&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;It's dangerous...&lt;/li&gt;
    &lt;li&gt;I don't want to wear skin tight lycra. (no one does, those people are clowns)&lt;/li&gt;
    &lt;li&gt;I'm in a hurry...&lt;/li&gt;
    &lt;li&gt;I'm too old...&lt;/li&gt;
    &lt;li&gt;I'm too young...&lt;/li&gt;
    &lt;li&gt;I don't have time...&lt;/li&gt;
    &lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://grist.org/biking/babes-in-bikeland-advice-for-cycling-with-kids/&quot;&gt;I have kids&lt;/a&gt;...&lt;/li&gt;
    &lt;li&gt;I can't fit groceries on my bike...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Again, none of these are real excuses. All one needs to do is look at other cities across the United States for validation. Minneapolis, a city with winters substantially colder than Cincinnati has a higher rate of bike commuting. San Francisco, a city with hills far bigger than what’s in Cincinnati has a higher rate of bike commuting. These are not excuses, but simply the fallacious ramblings of lazy, unambitious suburbanites.&lt;/p&gt;

&lt;p&gt;So how did we come to this sad state of mobility? Well, Cincinnati like many American cities continues to mistakenly redesigned many portions of the built environment to maximize the efficiency of the automobile at the expense of pedestrians and cyclists. This preference towards automotive convenience has proven a tough barrier to overcome in regards to increasing the bicycle ridership across the United States.&lt;/p&gt;

&lt;p&gt;This complete lack of forethought by our “urban planners” can be overcome rather easily however. Just because the built environment has been redesigned to incentivize car dependence and laziness doesn’t mean you actually have live that way. Travel to any one of Cincinnati’s traffic clogged suburban neighborhoods around rush hour and you’ll witness the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Tragedy_of_the_commons&quot;&gt;tragedy of the commons&lt;/a&gt; in full effect. Cincinnati’s residents need to stop selfishly thinking about personal convenience, and for once, consider the greater good when choosing between mobility options. No one likes bike commuting in the rain or in the dead of winter, but either of those situations are preferable to arriving like generic Steve who sat in his car for 30 minutes then took the elevator.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img alt=&quot;bike commuting in cincinnati&quot; title=&quot;bike commuting in cincinnati&quot; src=&quot;/images/2018-01-11/DSC_2596.jpg&quot; /&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;For most trips, substituting biking for driving is a fairly painless alternative, all it takes is a bit of motivation. Once the habit of biking instead of driving is established, traveling through out the city becomes a fun way to break up the day, and &lt;a target=&quot;_blank&quot; href=&quot;http://www.ilovebicycling.com/the-benefits-of-cycling-for-your-mental-health/&quot;&gt;cleanse the mind&lt;/a&gt;. Cincinnati is a &lt;a target=&quot;_blank&quot; href=&quot;https://youtu.be/pKCI3EA1uAY&quot;&gt;great city for biking&lt;/a&gt; and walking. Commuting via bicycle is an opportunity to enjoy the day, get some fresh air and exercise.&lt;/p&gt;

</description>
        <pubDate>Thu, 11 Jan 2018 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2018-01-11/one-year-of-bike-commuting/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2018-01-11/one-year-of-bike-commuting/</guid>
      </item>
    
      <item>
        <title>Evolving Simple Organisms using a Genetic Algorithm and Deep Learning from Scratch with Python</title>
        <description>&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - Learn how to evolve a population of simple organisms each containing a unique neural network using a genetic algorithm.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;A few weeks ago I got pretty deep into a late night &lt;a target=&quot;_blank&quot; href=&quot;http://youtube-rabbit-hole.urbanup.com/9025238&quot;&gt;YouTube rabbit hole&lt;/a&gt;, and somewhere around &lt;a target=&quot;_blank&quot; href=&quot;https://youtu.be/HgWQ-gPIvt4&quot;&gt;evolving soft body robots&lt;/a&gt;, I came across this video (&lt;a target=&quot;_blank&quot; href=&quot;https://youtu.be/TC5jzw05mNo&quot;&gt;here&lt;/a&gt;). I’m not sure what if it was the peaceful background music or the hypnotizing motion of the dragonflies but I wanted to try and run the simulation on my local computer. After failing to find a GitHub repo for this, I decided to spend a few hours coding my own version in Python. I was pretty happy with the end results so I decided to turn it into a tutorial.&lt;/p&gt;

&lt;p&gt;During this post, well code from scratch a simulation environment that contains organisms that must consume as much as food as possible in order to survive (click &lt;a href=&quot;#results&quot;&gt;here&lt;/a&gt; to see the final results). If these organisms were people, they would be competitive eaters.&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img src=&quot;/images/2017-11-30/hot-dog-eating-contest.gif&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;h3&gt;Neural Network and Navigation&lt;/h3&gt;

&lt;p&gt;Starting off with the basics, the organisms will be controlled by a simple, fully connected &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Artificial_neural_network&quot;&gt;neural network&lt;/a&gt;. The input for the neural network will be a normalized value ranging from [-1, +1], representing the direction to the nearest food particle. This heading is calculated by taking the direction to the nearest food particle (which ranges from +/- 180 degrees) and dividing it by 180. Below are two navigation examples.&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img alt=&quot;organism heading calculation&quot; title=&quot;organism heading calculation&quot; src=&quot;/images/2017-11-30/heading-calculation.png&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;p&gt;Because our single input ranges from [-1, +1] and our desired outputs also range from [-1, +1], the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;tanh&lt;/a&gt; will make the ideal &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Activation_function&quot;&gt;activation function&lt;/a&gt;. Below is a diagram of the neural network with its inputs and outputs as well as its hidden layer. There exists many excellent tutorials on neural networks online so I wont go into great detail here. I recommend the following to those that are interested: &lt;a target=&quot;_blank&quot; href=&quot;https://youtu.be/aircAruvnKk&quot;&gt;here&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://gormanalysis.com/introduction-to-neural-networks/&quot;&gt;here&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://gormanalysis.com/neural-networks-a-worked-example/&quot;&gt;here&lt;/a&gt;, and &lt;a target=&quot;_blank&quot; href=&quot;http://neuralnetworksanddeeplearning.com/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img src=&quot;/images/2017-11-30/organism-neural-network.png&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;p&gt;Since the neural network is nothing more than simple matrix multiplication, it only takes up a few lines of code thanks to &lt;a target=&quot;_blank&quot; href=&quot;http://www.numpy.org/&quot;&gt;NumPy&lt;/a&gt;. During the evolution process, it’s these weights that will be optimized. Lastly,  I have set the default number of hidden nodes to five, but this can be increased or decreased to your liking.&lt;/p&gt;

&lt;h3&gt;Organism&lt;/h3&gt;

&lt;p&gt;The organism class is the star of the show here. It contains the neural network, as well as functions for updating its heading, velocity, and position. When an organism is initialized for the first time, its position, heading, velocity, acceleration, and neural network weights are all randomly generated.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;organism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# position (x)
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# position (y)
&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;# orientation   [0, 360]
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'v_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# velocity      [0, v_max]
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dv_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dv_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# dv
&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# distance to nearest food
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# orientation to nearest food
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# fitness (food count)
&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
        
        
    &lt;span class=&quot;c1&quot;&gt;# NEURAL NETWORK
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# SIMPLE MLP
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;af&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tanh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;# activation function
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;af&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# hidden layer
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;af&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# output layer
&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# UPDATE dv AND dr WITH MLP RESPONSE
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn_dv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# [-1, 1]  (accelerate=1, deaccelerate=-1)
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn_dr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# [-1, 1]  (left=1, right=-1)
&lt;/span&gt;
        
    &lt;span class=&quot;c1&quot;&gt;# UPDATE HEADING
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn_dr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dr_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;360&lt;/span&gt;

        
    &lt;span class=&quot;c1&quot;&gt;# UPDATE VELOCITY
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_vel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn_dv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dv_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'v_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'v_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    
    &lt;span class=&quot;c1&quot;&gt;# UPDATE POSITION
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radians&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dx&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dy&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;Food&lt;/h3&gt;

&lt;p&gt;The only other class we need to create is the food class. This is a simple object that contains an x/y location and an energy value. This energy value will directly impact the organisms fitness. For now, this energy value remains constant and set at one, but it can be randomized or changed to anything if you feel like modifying it to. Additionally, a &lt;i&gt;respawn&lt;/i&gt; function is present to regenerate the location of the food particle once it as been consumed by an organism. This keeps the total number of food particles within each simulation time step constant.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;energy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;respawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'x_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y_max'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;energy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;Evolution&lt;/h3&gt;

&lt;p&gt;The organism will be optimized using a &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Genetic_algorithm&quot;&gt;genetic algorithm&lt;/a&gt; (GA) which falls under the larger umbrella of &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Evolutionary_algorithm&quot;&gt;evolutionaty algorithms&lt;/a&gt; (EA). Genetic algorithms work by imitating the natural biological process of evolution by starting off with an initial population, and through &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Selection_(genetic_algorithm)&quot;&gt;selection&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Crossover_(genetic_algorithm)&quot;&gt;crossover&lt;/a&gt;, and &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Mutation_(genetic_algorithm)&quot;&gt;mutation&lt;/a&gt; over many generations, an optimal solution emerges. With that said, EAs are not numerically guaranteed to find the global optimum but given proper initial conditions they are exceptionally good at searching through the design space and finding optimal or near optimal solutions. For this tutorial, the EA scheme will be as follows:&lt;/p&gt;

&lt;ul class=&quot;ul-style-a&quot; style=&quot;list-style-type: none;&quot;&gt;
    &lt;li&gt;
        &lt;p&gt;
            &lt;b&gt;Selection&lt;/b&gt; - The simplest form of selection is called &lt;i&gt;elitism&lt;/i&gt;, this is where the top n% of the current generations fittest individuals are selected and carried over to the next generation.
        &lt;/p&gt;
    &lt;/li&gt;

    &lt;li&gt;
        &lt;p&gt;
            &lt;b&gt;Crossover&lt;/b&gt; - Using the same pool of individuals selected during the elitism step previously, pairs of individuals will be randomly selected as parents and a new offspring will be generated. Because we’re dealing with the weights of the neural network, the following equation will be used to crossover traits between the two parents to the resulting offspring:

                &lt;equation class=&quot;has-jax&quot;&gt;$$ offspring=parent_1(a) + parent_2(1-a) $$&lt;/equation&gt;

            Where &lt;equation class=&quot;has-jax&quot;&gt;\( a \)&lt;/equation&gt; is a randomly generated value between zero and one, and &lt;equation class=&quot;has-jax&quot;&gt;\( parent_1 \)&lt;/equation&gt;, and &lt;equation class=&quot;has-jax&quot;&gt;\( parent_2 \)&lt;/equation&gt; represent the weights of the neural network. Because there are two matrices that are being blending together (wih and who), the implementation will actually be as follows:

                &lt;equation class=&quot;has-jax&quot;&gt;$$ offspring\_wih=parent\_wih_1(a) + parent\_wih_2(1-a) $$&lt;/equation&gt;
                &lt;equation class=&quot;has-jax&quot;&gt;$$ offspring\_who=parent\_who_1(a) + parent\_who_2(1-a) $$&lt;/equation&gt;
        &lt;/p&gt;
    &lt;/li&gt;
    
    &lt;li&gt;
        &lt;p&gt;
            &lt;b&gt;Mutation&lt;/b&gt; - Lastly, once the new offspring has been generated, a random number between zero and one will be generated. If this value is below the user initialized mutation threshold, mutation will occur. In the event that mutation does occur, a random weight from one of the two neural network weight matrices will be replaced with a random value that is within +/- 10% of the original value. This will create just a slight variation within the organism that could potentially lead to a fitter organism. The mutation effect is limited to +/- 10% of the original value because we want to avoid causing catastrophic failure within the neural network and potentially paralyzing the organism.
        &lt;/p&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The diagram below shows just how simple this EA scheme is.&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img alt=&quot;organism evolution&quot; title=&quot;organism evolution&quot; src=&quot;/images/2017-11-30/organism-evolution.png&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;p&gt;And finally, the codified EA routine can be seen below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;evolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms_old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;elitism_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'elitism'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pop_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;new_orgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pop_size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elitism_num&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- GET STATS FROM CURRENT GENERATION ----------------+
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultdict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms_old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BEST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BEST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'BEST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'WORST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'WORST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'WORST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt;
            
        &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SUM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COUNT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AVG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'SUM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'COUNT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    
    
    &lt;span class=&quot;c1&quot;&gt;#--- ELITISM (KEEP BEST PERFORMING ORGANISMS) ---------+
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;organisms_old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attrgetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fitness'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;organisms_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elitism_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;organisms_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;organism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    
    &lt;span class=&quot;c1&quot;&gt;#--- GENERATE NEW ORGANISMS ---------------------------+
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_orgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# SELECTION (TRUNCATION SELECTION)
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elitism_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;org_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;org_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orgs_sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# CROSSOVER
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;crossover_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crossover_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossover_weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crossover_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossover_weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
        &lt;span class=&quot;c1&quot;&gt;# MUTATION
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mutate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# PICK WHICH WEIGHT MATRIX TO MUTATE
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;mat_pick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     

            &lt;span class=&quot;c1&quot;&gt;# MUTATE: WIH WEIGHTS
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mat_pick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hnodes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                
            &lt;span class=&quot;c1&quot;&gt;# MUTATE: WHO WEIGHTS
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mat_pick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'onodes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hnodes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                    
        &lt;span class=&quot;n&quot;&gt;organisms_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;organism&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wih&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wih_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;who&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;who_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gen['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;']-org['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;']'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
                
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;Simulation&lt;/h3&gt;

&lt;p&gt;The last critical piece of coding that’s needed is something to actually run the simulation. This &lt;i&gt;simulate&lt;/i&gt; function will effectively represent the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Loss_function&quot;&gt;cost function&lt;/a&gt; for our optimization problem and will be called once every generation. The duration of each simulation is determined by dividing the total simulation time &lt;i&gt;gen_time&lt;/i&gt; (in seconds) by the duration of the time step; &lt;i&gt;dt&lt;/i&gt;. As an example, if the simulation length is set at 100 seconds, and &lt;i&gt;dt&lt;/i&gt; is equal to 1/25th of a second, then there will be a total of 2500 timesteps that need to be simulated. During each time step, several key values will be updated:&lt;/p&gt;

&lt;ul class=&quot;ul-style-a&quot; style=&quot;list-style-type: none;&quot;&gt;
&lt;li&gt;
    &lt;p&gt;
        &lt;b&gt;Collision detection&lt;/b&gt; - Here we are checking for collisions between organisms and food particles. When a collision is detected, that organism will get its fitness function updated and the food particle will respawn at a new random location.
    &lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
    &lt;p&gt;
        &lt;b&gt;Determine closest food particle&lt;/b&gt; - This one is fairly self explanitory. For every organism, the closest food particle must be determined.
    &lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
    &lt;p&gt;
        &lt;b&gt;Determine direction to nearest food particle&lt;/b&gt; - Once the nearest food particle has been determined for each organism, the direction to that particle must be calculated.
    &lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
    &lt;p&gt;
        &lt;b&gt;Query neural network&lt;/b&gt; - Using the updated (and normalized) direction value, the neural network in each organism is quaried.
    &lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
    &lt;p&gt;
        &lt;b&gt;Update organism&lt;/b&gt; - Based on the respone from the neural network, the heading, velocity, and position are all updated.
    &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below is the simulation function:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;simulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;total_time_steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'gen_time'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'dt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;#--- CYCLE THROUGH EACH TIME STEP ---------------------+
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_step&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_time_steps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# PLOT SIMULATION FRAME
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;#if gen == settings['gens'] - 1 and settings['plot']==True:
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;plot_frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        

        &lt;span class=&quot;c1&quot;&gt;# UPDATE FITNESS FUNCTION
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;food_org_dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;# UPDATE FITNESS FUNCTION
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food_org_dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.075&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fitness&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;energy&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;respawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;# RESET DISTANCE AND HEADING TO NEAREST FOOD SOURCE
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# CALCULATE HEADING TO NEAREST FOOD SOURCE
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                
                &lt;span class=&quot;c1&quot;&gt;# CALCULATE DISTANCE TO SELECTED FOOD PARTICLE
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;food_org_dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;# DETERMINE IF THIS IS THE CLOSEST FOOD PARTICLE
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food_org_dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food_org_dist&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_food&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calc_heading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;food&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# GET ORGANISM RESPONSE
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;think&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# UPDATE ORGANISMS POSITION AND VELOCITY
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_vel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;organisms&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3&gt;Putting it All Together&lt;/h3&gt;

&lt;p&gt;With all the major components having been created the final code can now be assembled. There are a few smaller functions I neglected to include in the above writeup because they’re so simple reading about them would take longer than just reading the code directly. I ended up using &lt;a target=&quot;_blank&quot; href=&quot;https://matplotlib.org/&quot;&gt;matplotlib&lt;/a&gt; for displaying the simulation. This is far from the most efficient or elligant solution so by default the visualization is turned off. Lastly, pasting the entire code would be a bit redundent at this point so download/fork it from the GitHub repo (&lt;a target=&quot;_blank&quot; href=&quot;https://github.com/nathanrooy/evolving-simple-organisms/blob/master/organism_v1.py&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;

&lt;p&gt;When you run the entire code, the output should be something similar to this:&lt;/p&gt;

&lt;center&gt;&lt;fig&gt;&lt;img src=&quot;/images/2017-11-30/results.gif&quot; /&gt;&lt;/fig&gt;&lt;/center&gt;

&lt;p&gt;I hope this was helpful. If anything seems unclear, please let me know. Thanks for reading!&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Nov 2017 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2017-11-30/evolving-simple-organisms-using-a-genetic-algorithm-and-deep-learning/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2017-11-30/evolving-simple-organisms-using-a-genetic-algorithm-and-deep-learning/</guid>
      </item>
    
      <item>
        <title>Do We Actually Need to Replace the Western Hills Viaduct?</title>
        <description>&lt;p class=&quot;TLDR&quot;&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; - In this post, I look at who would be impacted if we simply removed the viaduct. Spoiler: less than 5% of the population would be drastically impacted...&lt;/p&gt;

&lt;h3&gt;Introduction and Background&lt;/h3&gt;

&lt;p&gt;If you live in the Cincinnati area, by now you should have heard that the Western Hills Viaduct is in a fairly dire situation at the moment and calls for a replacement have reached an almost fevered pitch. While all this &lt;a target=&quot;_blank&quot; href=&quot;http://www.wcpo.com/news/local-news/hamilton-county/cincinnati/time-running-out-to-find-western-hills-viaduct-replacement-funding&quot;&gt;squealing&lt;/a&gt; for a replacement has been going on, I couldn’t help but wonder if a replacement was actually what Cincinnati needs? As it currently stands, it requires $1 million per year just to maintain and a replacement is expected to cost $335 million.&lt;sup id=&quot;fnref:fn201&quot;&gt;&lt;a href=&quot;#fn:fn201&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; This is an absurd amount of our money to be spending on another road project. This got me thinking, does the current viaduct generate at least $1 million a year in revenue for the city to justify its ongoing maintenance? Would a replacement viaduct generate $335 million in revenue for the city to justify its cost? Who would be impacted if we simply got rid of the viaduct and invested the money elsewhere? While I can’t answer all these questions, I can focus on the last one. But first, a little refresher.&lt;/p&gt;

&lt;center&gt;
    &lt;figure&gt;
        &lt;img src=&quot;/images/2017-11-29/viaduct-image.jpg&quot; /&gt;
    &lt;/figure&gt;
&lt;/center&gt;

&lt;p&gt;During the early 1900’s as private car ownership began to take off across the country, commuting patterns underwent drastic changes.&lt;sup id=&quot;fnref:fn2&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; In Cincinnati, as this relates to the Western Hills Viaduct, once tight-knit and walkable neighborhoods such as Price Hill became choked with traffic, and began expanding outwards. These newly minted suburbanites needed a way to quickly enter and exit the city via their private cars and so between 1930-32 the Western Hills Viaduct was built. Later in that same decade, the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Federal_Housing_Administration&quot;&gt;FHA&lt;/a&gt; was created and coupled with &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Redlining&quot;&gt;redlining&lt;/a&gt; the suburban development explosion ensued.&lt;sup id=&quot;fnref:fn2:1&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Fueled by the irrational fears of &lt;a target=&quot;_blank&quot; href=&quot;http://www.ohiohistorycentral.org/w/Segregation&quot;&gt;living amongst minorities&lt;/a&gt; and powered by an endless stream of financial government handouts available exclusively to white families (&lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/White_flight&quot;&gt;white flight&lt;/a&gt;), areas such as Delhi, Covedale, Cheviot, Dent, and Mack rapidly came into existance.&lt;sup id=&quot;fnref:fn2:2&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn1&quot;&gt;&lt;a href=&quot;#fn:fn1&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn7&quot;&gt;&lt;a href=&quot;#fn:fn7&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; Because of the completely car dependent nature of these areas, traffic quickly grew and upgrades were soon needed. These upgrades came during 1960-63 when the eastern end of the Western Hills Viaduct was rebuilt to accommodate connections to I-75.&lt;/p&gt;

&lt;p&gt;Today, the Western Hills Viaduct is one of several arterial roads that connect the west side with I-75 and the rest of Cincinnati. Seen below, the Western Hills Viaduct and its many alternatives are highlighted.&lt;/p&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viaduct&quot; title=&quot;western hills viaduct&quot; src=&quot;/images/2017-11-29/viaduct-alternatives.jpg&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;p&gt;As the Western Hills Viaduct continues to slowly crumble away, it forces us to realistically evaluate is purpose in a city that’s quickly moving into the future.&lt;/p&gt;

&lt;h3&gt;Methodology&lt;/h3&gt;

&lt;p&gt;This post is primarily interested in looking at how much of the Hamilton County/Cincinnati population would be impacted by the removal of the Western Hills Viaduct and where these people reside. To accomplish this, I have created several maps representing the potential delay incurred by all Hamilton County residents in the absence of the viaduct. As a simple example: imagine that you’re driving from Price Hill to Clifton and it takes you 15 minutes. Now, hypothetically without the Western Hills Viaduct, your journey time increased to 17 minutes. This represents a delay of 2 minutes or roughly 13.3%. Your starting location in Price Hill will now be marked as having a 13.3% delay when traveling to Clifton. Using this simple format, I calculated the percent delay for every address in Hamilton County to several common shopping and employment centers. For a complete explanation on the numerical computations employed during this post, skip down to the &lt;a href=&quot;#technical-notes&quot;&gt;&lt;i&gt;Technical Notes&lt;/i&gt;&lt;/a&gt; section below.&lt;/p&gt;

&lt;h3&gt;Results&lt;/h3&gt;

&lt;p&gt;Now for the good stuff! I decided on five destinations: the Cincinnati Zoo, downtown, the University of Cincinnati, Western Hills Plaza, and Xavier University. Keep in mind, if you’re trying to determine whether or not you could be impacted, consider these destinations as rough approximations. If you’re driving from Price Hill to Corryville, while I didn’t include Corryville as an exact destination, it’s within half a mile of the University of Cincinnati which I did include. Because of this, the University of Cincinnati map could be used as a very loose approximation for this particular situation.&lt;/p&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viaduct time delay to cincinnati zoo&quot; title=&quot;western hills viaduct time delay to cincinnati zoo&quot; src=&quot;/images/2017-11-29/web-cincinnati-zoo.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;center&gt;&lt;figure id=&quot;downtown&quot;&gt;&lt;img src=&quot;/images/2017-11-29/web-downtown.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;p&gt;One thing to keep in mind when looking at these maps is to consider trip duration. For example, if you’re traveling from the western edge of the viaduct to downtown, that journey is only about seven minutes. While this location has been marked as incurring a delay of “20% or more”, 20% of a seven minute drive is less than a minute and thirty seconds.&lt;/p&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viadict delay to university of cincinnati&quot; title=&quot;western hills viadict delay to university of cincinnati&quot; src=&quot;/images/2017-11-29/web-university-of-cincinnati.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viaduct delay to western hills plaza&quot; title=&quot;western hills viaduct delay to western hills plaza&quot; src=&quot;/images/2017-11-29/web-western-hills-plaza.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;p&gt;One thing to note is that the removal of the viaduct does not affect traffic entering or exiting highway I-75. Because there have been so many alternatives to the Western Hills Viaduct built over time, highway traffic remains largely unaffected.&lt;/p&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viaduct delay to xavier university&quot; title=&quot;western hills viaduct delay to xavier university&quot; src=&quot;/images/2017-11-29/web-xavier-university.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;p&gt;Now that the delay maps have been generated, the next logical step is to look at how much of the population is impacted. As an example, in the &lt;a href=&quot;#downtown&quot;&gt;downtown destination map&lt;/a&gt;, the purple shaded area representing a “5% or less” delay looks large (it covers 5.74% of the total Hamilton County land area) but because this area covers almost exclusively low density commuter sprawl, it represents only 3.87% of the Hamilton County population or roughly 31,077 people. This might seem like a large number of people but contrast that to the 742,995 people who are completely unaffected by the removal of the viaduct within that same map.&lt;/p&gt;

&lt;center&gt;&lt;figure&gt;&lt;img alt=&quot;western hills viaduct population delay table&quot; title=&quot;western hills viaduct population delay table&quot; src=&quot;/images/2017-11-29/table_01.png&quot; /&gt;&lt;/figure&gt;&lt;/center&gt;

&lt;p&gt;It’s interesting to note that in every destination example, over 95% of Hamilton County residents remain basically unaffected by the potential removal of the Western Hills Viaduct. Additionally, no one outside of Hamilton County is impacted.&lt;/p&gt;

&lt;h3&gt;Final Thoughts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Personal costs&lt;/strong&gt; — During 2017, between fuel, insurance, depreciation, maintence/repairs, car payments, parking, tolls, etc., the monthly cost to own and operate a private vehicle is just over $700 per month. This translates to nearly $8500 per year.&lt;sup id=&quot;fnref:fn203&quot;&gt;&lt;a href=&quot;#fn:fn203&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; That’s a trip for two to Bora Bora for several weeks. But instead, residents are forced to spend that (or nearly that) on a car that remains parked and motionless for the vast majority of its life. What if we invested $335 million making Cincinnati less car dependent instead? What if the 5% of residents who are adversely affected by the viaduct get to save $8500 per year because public transportation was improved in those areas? By providing transportation alternatives we improve the city for everyone. Fewer cars on the road means less traffic, less pollution, and less auto accidents, and financial savings for everyone.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintenance costs vs. economic value&lt;/strong&gt; — In addition to a $335 million price tag, it has been noted that the viaduct would require $1 million per year in maintenance expences.&lt;sup id=&quot;fnref:fn201:1&quot;&gt;&lt;a href=&quot;#fn:fn201&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; This seems unrealistically low given that it’s widely acknowledged that infrastructure projects such as roads, bridges, and highways require 3 percent of their total cost in maintenance every year.&lt;sup id=&quot;fnref:fn20&quot;&gt;&lt;a href=&quot;#fn:fn20&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt; This means that if Cincinnati wants to maintain the new viaduct, it must spend somewhere between $1 million dollars and $10 million dollars per year! Will the replacement viaduct contribute at least $1 million dollars in yearly economic value for the city? Does it even have a chance of contributing $10 million dollars to the local economy?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Induced demand &amp;amp; disappearing traffic&lt;/strong&gt; — In his book &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/ja2O5Yj&quot;&gt;&lt;i&gt;Street Smart&lt;/i&gt;&lt;/a&gt;, &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Sam_Schwartz&quot;&gt;Samuel Schwartz&lt;/a&gt; (the former NYC Traffic Commissioner) details the time when the West Side Highway in New York City collapsed and the counterintuitive phenomenon of &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Induced_demand#Reduced_demand_(the_inverse_effect)&quot;&gt;&lt;i&gt;disappearing traffic&lt;/i&gt;&lt;/a&gt; occurred. I bring this up because the West Side Highway carried almost twice the number of vehicles per day as the Western Hills Viaduct here in Cincinnati but instead of wasting more money to replace it, they simply didn’t. I’ll let Samuel Schwartz tell the rest:&lt;/p&gt;

&lt;blockquote&gt;Nearly everyone, including most engineers, assumes that a constricted traffic artery behaves like a garden hose: reduce the diameter from one inch to one-half inch, and the pressure increases. But drivers are aren't water molecules. When a road's capacity is reduced, congestion doesn't necessarily increase, In fact, the &lt;a target=&quot;_bank&quot; href=&quot;https://nacto.org/wp-content/uploads/2015/04/disappearing_traffic_cairns.pdf&quot;&gt;biggest and best study&lt;/a&gt; of the reduction in road capacity shows that lane closures not only cause traffic to decrease on the roads remaining lanes, &lt;i&gt;but only half the decrease reappears anywhere else&lt;/i&gt;. This means that if two lanes are closed on a four-lane boulevard, it might carry only 60 percent of the cars it did before the closure; but if you look at every alternative route, you'll be able to account for only half of the &quot;missing&quot; drivers. In an urban setting with alternative routes or public transit options &amp;mdash; that is, one with at least some commitment to smart street design &amp;mdash; 20 percent of the boulevard's traffic will just disappear. &quot;If you unbuild it, they will go away&quot; - (Street Smart, pg. 47) &lt;/blockquote&gt;

&lt;p&gt;One very cheap, and easy way to test this here in Cincinnati is to simply close the viaduct for a few weeks. A simple traffic &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/A/B_testing&quot;&gt;A/B test&lt;/a&gt; that costs basically nothing to conduct could potentially save us $335 million…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spending fairness&lt;/strong&gt; — One of the biggest reasons to look for alternatives is simply a matter of spending equality. Unlike the Metro, streetcar, and bike lanes, which are funded by everyone and open to everyone, the viaduct is only open to those who own a car. Additionally, the car owners potentially using the viaduct on a regular basis are a tiny minority of the total population. What this means is that the many who live downtown and surrounding walkable neighborhoods who are smart enough to live life without the burden of a car end up footing the bill for this replacement. This is hardly a fair situation. Suburban commuters have already &lt;a target=&quot;_blank&quot; href=&quot;https://www.youtube.com/watch?v=odF4GSX1y3c&quot;&gt;ruined cities once before&lt;/a&gt;, shouldn’t we begin to mend the damages they caused? At the very least let’s not repeat the same mistakes twice. Lastly, for the people who use it everyday, stepping out of their routine might be uncomfortable but should the rest of the us be required to suffer because of this? There are many ways in which we can spend our money that benefit everyone, not just a select few.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long term subsidies&lt;/strong&gt; — The areas most reliant on the Western Hills Viaduct are also some of the most subsidized areas of Hamilton County. Areas like Delhi, Covedale, Cheviot, Dent, and Mack would not exist if it weren’t for the FHA subsidizing white families to move there in the first place.&lt;sup id=&quot;fnref:fn1:1&quot;&gt;&lt;a href=&quot;#fn:fn1&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn2:3&quot;&gt;&lt;a href=&quot;#fn:fn2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; Per person, these low density areas require more roads, telephone lines, sewers, water pipes, gas pipes, more fire stations, more police stations, more of everything.&lt;sup id=&quot;fnref:fn4&quot;&gt;&lt;a href=&quot;#fn:fn4&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt; These areas also have some of the lowest taxes, which means we’re all paying for these residents to live within this inefficient development pattern. These neighborhoods were built using subsidies, and their continued existence depends upon them.&lt;sup id=&quot;fnref:fn3&quot;&gt;&lt;a href=&quot;#fn:fn3&quot; class=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn5&quot;&gt;&lt;a href=&quot;#fn:fn5&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt; This is the most anti-free market situation imaginable, and financially unsustainable over the long-term. It’s time we start planning for the future. Should everyone in Cincinnati and Hamilton County have to waste $335 million subsidizing a few butthurt suburban commuters so they can shave a couple seconds off their commute? It’s not our fault they mistakenly decided to segregate themselves from the rest of society on the geographical fringes of civilization. It’s certainly shouldn’t mean that we have to pick up the tab for it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Happy city and financial sustainability&lt;/strong&gt; — It’s been unequivocally proven that people who waste their lives commuting in private cars are fatter, unhappier, and less social than their counterparts downtown and surrounding neighborhoods who walk and bike.&lt;sup id=&quot;fnref:fn5:1&quot;&gt;&lt;a href=&quot;#fn:fn5&quot; class=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn8&quot;&gt;&lt;a href=&quot;#fn:fn8&quot; class=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref:fn10&quot;&gt;&lt;a href=&quot;#fn:fn10&quot; class=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/sup&gt; Knowing this, do we really want to spend more money that will only further reinforce these negative aspects? These subsidised sprawling neighborhoods are an anomaly amongst civilization’s long history of neighborhoods and cities built at a walkable, human scale.&lt;sup id=&quot;fnref:fn12&quot;&gt;&lt;a href=&quot;#fn:fn12&quot; class=&quot;footnote&quot;&gt;12&lt;/a&gt;&lt;/sup&gt; Walkable neighborhoods are the economic engines of our society. Therefore, we should be doing everything we can to increase the quality of life within these areas. We should be spending our money in ways that foster a better community by bringing us together, not by making it easier to separate ourselves. We should be &lt;a target=&quot;_blank&quot; href=&quot;http://www.wlwt.com/article/liberty-street-narrowing-under-council-consideration/13117731&quot;&gt;reducing the lanes on Liberty street&lt;/a&gt;. We should be &lt;a target=&quot;_blank&quot; href=&quot;http://www.wcpo.com/news/local-news/hamilton-county/cincinnati/ohio-river-trail-connection-to-anderson-twp-still-an-option&quot;&gt;connecting our neighborhoods with bike lanes&lt;/a&gt;. We should be spending our money in ways that reduces the amount of pollution we create, not increases it. Cincinnati could be a city that doesn’t require car ownership to have a functional life. A city that saves its residents money rather than sinks it into endless money pits.&lt;/p&gt;

&lt;h3&gt;Suggestions?&lt;/h3&gt;

&lt;p&gt;Did I miss anything? Should I add another destination? Did I not consider a certain perspective in my summary? Please let me know. Everyone who reads this post will in some way have contributed in the form of tax dollars to a potential replacement or alternative.&lt;/p&gt;

&lt;h3 id=&quot;technical-notes&quot;&gt;Technical Notes&lt;/h3&gt;

&lt;p&gt;All calculations were performed using &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; scripts I wrote while using &lt;a target=&quot;_blank&quot; href=&quot;https://www.openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;sup id=&quot;fnref:fn102&quot;&gt;&lt;a href=&quot;#fn:fn102&quot; class=&quot;footnote&quot;&gt;13&lt;/a&gt;&lt;/sup&gt; data via &lt;a target=&quot;_blank&quot; href=&quot;http://geoffboeing.com/&quot;&gt;Geoff Boeing’s&lt;/a&gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/gboeing/osmnx&quot;&gt;OSMnx&lt;/a&gt;.&lt;sup id=&quot;fnref:fn100&quot;&gt;&lt;a href=&quot;#fn:fn100&quot; class=&quot;footnote&quot;&gt;14&lt;/a&gt;&lt;/sup&gt; Network routing was carried out with &lt;a target=&quot;_blank&quot; href=&quot;http://networkx.github.io/&quot;&gt;NetworkX&lt;/a&gt;.&lt;sup id=&quot;fnref:fn101&quot;&gt;&lt;a href=&quot;#fn:fn101&quot; class=&quot;footnote&quot;&gt;15&lt;/a&gt;&lt;/sup&gt; The location of every residential dwelling in Hamilton County was scraped from the &lt;a target=&quot;_blank&quot; href=&quot;http://www.hamiltoncountyauditor.org/&quot;&gt;Hamilton County Auditor’s&lt;/a&gt; webpage which was completed during a &lt;a target=&quot;_blank&quot; href=&quot;https://nathanrooy.github.io/posts/2017-02-15/the-age-of-cincinnati/&quot;&gt;previous project&lt;/a&gt; back in February. Additionally, I generated points on every road in Hamilton County to account for any potential delays incurred for people traveling from highways, parks, etc. Travel times were calculated based off the speed limit as recorded by OpenStreetMaps and the length of the road segment. Because not all network edges (roads) in the OpenStreetMaps database include a speed limit, a default of 25 mph was imposed. These instances of missing speed limits were very rare and predominantly occurred on smaller, less traveled residential back roads which made the default 25 mph a safe estimate. Contours were generated in &lt;a target=&quot;_blank&quot; href=&quot;http://www.qgis.org&quot;&gt;QGIS&lt;/a&gt; using the &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/ccrook/QGIS-Contour-Plugin&quot;&gt;contour plugin&lt;/a&gt; from &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/ccrook&quot;&gt;Chris Cook&lt;/a&gt; and Lionel Roubeyrie. Calculations involving population were based on the &lt;a target=&quot;_blank&quot; href=&quot;https://www.census.gov/geo/maps-data/data/tiger-data.html&quot;&gt;U.S. Census blocks shapefiles&lt;/a&gt; from 2010. I used an area weighted scheme when calculating populations. As an example: if a particular census block had 100 people in it, and 45% of it was covered by the “5% or less” delay region, then 45 people from that census block were counted towards the total number of people who will incur a “5% or less” delay. In the event that a fraction of people were impacted, that population value was always rounded to the nearest integer. And lastly, I used this project as an excuse to finally force myself to learn &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Adobe_Illustrator&quot;&gt;Adobe Illustrator&lt;/a&gt; so all maps and charts passed through AI at some point.&lt;/p&gt;

&lt;h3&gt;References&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:fn201&quot;&gt;
      &lt;p&gt;Sharon Coolidge, &lt;a target=&quot;_blank&quot; href=&quot;https://www.cincinnati.com/story/news/2017/08/25/finally-plan-pay-western-hills-viaduct/585643001/&quot;&gt;&lt;i&gt;Finally, a plan to pay for the Western Hills Viaduct&lt;/i&gt;&lt;/a&gt; (www.cincinnati.com - Published 8:34 a.m. ET August 25, 2017) &lt;a href=&quot;#fnref:fn201&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:fn201:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn2&quot;&gt;
      &lt;p&gt;Kenneth T. Jackson, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/73kVTVi&quot;&gt;&lt;i&gt;Crabgrass Frontier: The Suburbanization of the United States&lt;/i&gt;&lt;/a&gt; (Oxford University Press, 1987) &lt;a href=&quot;#fnref:fn2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:fn2:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;#fnref:fn2:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;#fnref:fn2:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn1&quot;&gt;
      &lt;p&gt;Richard Rothstein, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/fOsSJvl&quot;&gt;&lt;i&gt;The Color of Law: A Forgotten History of How Our Government Segregated America&lt;/i&gt;&lt;/a&gt; (Liveright, 2017) &lt;a href=&quot;#fnref:fn1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:fn1:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn7&quot;&gt;
      &lt;p&gt;David M. P. Freund, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/eshlCGV&quot;&gt;&lt;i&gt;Colored Property: State Policy and White Racial Politics in Suburban America&lt;/i&gt;&lt;/a&gt; (University of Chicago Press - May 15, 2010) &lt;a href=&quot;#fnref:fn7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn203&quot;&gt;
      &lt;p&gt;AAA, &lt;a target=&quot;_blank&quot; href=&quot;http://newsroom.aaa.com/tag/driving-cost-per-mile/&quot;&gt;&lt;i&gt;AAA Reveals True Cost of Vehicle Ownership&lt;/i&gt;&lt;/a&gt; (http://newsroom.aaa.com - August 23, 2017) &lt;a href=&quot;#fnref:fn203&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn20&quot;&gt;
      &lt;p&gt;Samuel I. Schwartz , &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/ja2O5Yj&quot;&gt;&lt;i&gt;Street Smart: The Rise of Cities and the Fall of Cars&lt;/i&gt;&lt;/a&gt; (PublicAffairs - September 8, 2015) &lt;a href=&quot;#fnref:fn20&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn4&quot;&gt;
      &lt;p&gt;Pamela Blais, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/5Nw29Ip&quot;&gt;&lt;i&gt;Perverse Cities: Hidden Subsidies, Wonky Policy, and Urban Sprawl&lt;/i&gt;&lt;/a&gt; (UBC Press, 2011) &lt;a href=&quot;#fnref:fn4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn3&quot;&gt;
      &lt;p&gt;Vishaan Chakrabarti, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/9RnnO1S&quot;&gt;&lt;i&gt;A Country of Cities: A Manifesto for an Urban America&lt;/i&gt;&lt;/a&gt; (Metropolis Books - May 30th, 2013) &lt;a href=&quot;#fnref:fn3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn5&quot;&gt;
      &lt;p&gt;Charles Montgomery, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/1suZipD&quot;&gt;&lt;i&gt;Happy City: Transforming Our Lives Through Urban Design&lt;/i&gt;&lt;/a&gt; (Farrar, Straus and Giroux, 2013) &lt;a href=&quot;#fnref:fn5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:fn5:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn8&quot;&gt;
      &lt;p&gt;Howard Frumkin, Lawrence Frank, and Richard J. Jackson, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/7SoATac&quot;&gt;&lt;i&gt;Urban Sprawl and Public Health: Designing, Planning, and Building for Healthy Communities&lt;/i&gt;&lt;/a&gt; (Island Press, 2004) &lt;a href=&quot;#fnref:fn8&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn10&quot;&gt;
      &lt;p&gt;Robert D. Putnam, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/fZBaHfi&quot;&gt;&lt;i&gt;Bowling Alone: The Collapse and Revival of American Community&lt;/i&gt;&lt;/a&gt; (Simon &amp;amp; Schister, 2001) &lt;a href=&quot;#fnref:fn10&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn12&quot;&gt;
      &lt;p&gt;Jeff Speck, &lt;a target=&quot;_blank&quot; href=&quot;http://a.co/15iMGVD&quot;&gt;&lt;i&gt;Walkable City: How Downtown Can Save America, One Step at a Time&lt;/i&gt;&lt;/a&gt; (North Point Press - November 12, 2013) &lt;a href=&quot;#fnref:fn12&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn102&quot;&gt;
      &lt;p&gt;Map data copyrighted OpenStreetMap contributors and available from &lt;a target=&quot;_blank&quot; href=&quot;https://www.openstreetmap.org&quot;&gt;https://www.openstreetmap.org&lt;/a&gt; &lt;a href=&quot;#fnref:fn102&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn100&quot;&gt;
      &lt;p&gt;Boeing, G. 2017. “&lt;a target=&quot;_blank&quot; href=&quot;http://geoffboeing.com/publications/osmnx-complex-street-networks/&quot;&gt;OSMnx: New Methods for Acquiring, Constructing, Analyzing, and Visualizing Complex Street Networks&lt;/a&gt;.” Computers, Environment and Urban Systems. 65, 126-139. doi:10.1016/j.compenvurbsys.2017.05.004 &lt;a href=&quot;#fnref:fn100&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:fn101&quot;&gt;
      &lt;p&gt;Aric A. Hagberg, Daniel A. Schult and Pieter J. Swart, &lt;a target=&quot;_blank&quot; href=&quot;http://conference.scipy.org/proceedings/SciPy2008/paper_2/&quot;&gt;“Exploring network structure, dynamics, and function using NetworkX”&lt;/a&gt;, in &lt;a target=&quot;_blank&quot; href=&quot;http://conference.scipy.org/proceedings/SciPy2008/index.html&quot;&gt;Proceedings of the 7th Python in Science Conference (SciPy2008)&lt;/a&gt;, Gäel Varoquaux, Travis Vaught, and Jarrod Millman (Eds), (Pasadena, CA USA), pp. 11–15, Aug 2008 &lt;a href=&quot;#fnref:fn101&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 29 Nov 2017 00:00:00 -0500</pubDate>
        <link>https://nathanrooy.github.io//posts/2017-11-29/western-hills-viaduct-spatial-analysis/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2017-11-29/western-hills-viaduct-spatial-analysis/</guid>
      </item>
    
      <item>
        <title>Differential Evolution Optimization from Scratch with Python</title>
        <description>&lt;p&gt;Besides &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/Particle_swarm_optimization&quot;&gt;particle swarm optimization&lt;/a&gt; (PSO) which I touched on &lt;a target=&quot;_blank&quot; href=&quot;https://nathanrooy.github.io/posts/2016-08-17/simple-particle-swarm-optimization-with-python/&quot;&gt;previously&lt;/a&gt;, &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/Differential_evolution&quot;&gt;differential evolution&lt;/a&gt; (DE) is one of my go-to favorites. Just like PSO, differential evolution falls within the &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/Evolutionary_algorithm&quot;&gt;evolutionary algorithms&lt;/a&gt; (EA) family. Differential evolution is very similar to &lt;a target=&quot;blank&quot;&gt;genetic algorithms&lt;/a&gt; (GA) which are based on the principles of evolutionary biology such as mutation, crossover, and selection. The downside of genetic algorithms is that at their core, they are based on a bit level information structure. Because of this, GAs excel at combinatorial optimization problems such as the &lt;a target=&quot;blank&quot; href=&quot;https://en.wikipedia.org/wiki/Travelling_salesman_problem&quot;&gt;traveling salesman problem&lt;/a&gt;. The downside is that GAs don’t natively support real valued (float values) cost functions. Sure, genetic algorithms can be modified to support float values, but in my experience it just isn’t worth it. This is where differential evolution comes it. Differential evolution is basically a genetic algorithm that natively supports float value based cost functions. In this tutorial, I hope to teach you the fundamentals of differential evolution and implement a bare bones version in &lt;a target=&quot;_blank&quot; href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The basic structure of differential evolution can be summed up below:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1) Initialize a random population of individuals throughout the search space.

2) while iter &amp;lt;= max num of generations

    3) cycle through each individual in the population
    
        3.A) perform mutation
            
        3.B) perform recombination (&quot;crossover&quot; in GA lingo)
            
        3.C) perform selection
            
    4) if stopping criterion has been met:
            exit and return best individual
            
        else:
            iter = iter + 1
            go back to step #3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So let’s go through each step while implementing it in Python. Before we can get to step one, we need to construct the main function which will contain the bulk of the code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best_individual&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Simple, let’s move to step one. Given a list of tuples representing the search space bounds for each input variable &lt;equation class=&quot;has-jax&quot;&gt;\( x_n \)&lt;/equation&gt; such that:&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ bounds = [(x_{1_{min}}, x_{1_{max}}),(x_{2_{min}},x_{2_{max}}),..,(x_{n_{min}},x_{n_{max}})] $$&lt;/equation&gt;

&lt;p&gt;Initializing a population of size (popsize) given user specified bounds:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- INITIALIZE A POPULATION (step #1) ----------------+
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best_individual&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It would be prudent to note at this point that the term &lt;i&gt;individual&lt;/i&gt; which is simply just a one-dimensional list, or array of values will be used interchangeably with the term &lt;i&gt;vector&lt;/i&gt;, since they are essentially the same exact thing. Within the Python code, this may take the form of &lt;i&gt;vec&lt;/i&gt; or just simply &lt;i&gt;v&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;Next, we need to begin the main loop of the algorithm represented by step #2, while we’re at it, we’ll knock out step #3A. There exists many different flavors of mutation for differential evolution but we’re going to stick with the simplest for now. In this version of mutation, we need to select three individuals &lt;equation class=&quot;has-jax&quot;&gt;\( x_1 \)&lt;/equation&gt;, &lt;equation class=&quot;has-jax&quot;&gt;\( x_2 \)&lt;/equation&gt;, and &lt;equation class=&quot;has-jax&quot;&gt;\( x_3 \)&lt;/equation&gt; from the current generation that are both unique to themselves, but also unique to the currently selected individual that we’re mutating. From here we subtract individuals &lt;equation class=&quot;has-jax&quot;&gt;\( x_2 \)&lt;/equation&gt; and &lt;equation class=&quot;has-jax&quot;&gt;\( x_3 \)&lt;/equation&gt; from each other, and multiply the difference by the user controlled mutation factor &lt;equation class=&quot;has-jax&quot;&gt;\( F \)&lt;/equation&gt; which ranges from [0,2]. This is then added to the individual &lt;equation class=&quot;has-jax&quot;&gt;\( x_1 \)&lt;/equation&gt; which forms the new individual &lt;equation class=&quot;has-jax&quot;&gt;\( v \)&lt;/equation&gt; or what’s called the donor. Below is the equation form of this mutation scheme.&lt;/p&gt;

&lt;equation class=&quot;has-jax&quot;&gt;$$ v = x_1 + F(x_2 - x_3) $$&lt;/equation&gt;

&lt;p&gt;One thing we need be aware of at this point is the possibility of this new donor vector existing outside of the bounds specified at initialization. Because of this, we need to create a separate function that checks and corrects for this. In the event that one of these rogue points are found, we’ll simply move it to the nearest boundary whether it’s the minimum or maximum. In the code, this new function will be called &lt;i&gt;ensure_bounds&lt;/i&gt;. Implementing all this into our code looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in vector 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the minimum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the maximum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# the variable is fine
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- INITIALIZE A POPULATION (step #1) ----------------+
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;c1&quot;&gt;#--- SOLVE --------------------------------------------+
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each generation (step #2)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    
        &lt;span class=&quot;c1&quot;&gt;# cycle through each individual in the population (step #3)
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- MUTATION (step #3.A) ---------------------+
&lt;/span&gt;            
            &lt;span class=&quot;c1&quot;&gt;# select three random vector index positions [0, popsize), not including current vector (j)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# target individual
&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# subtract x3 from x2, and create a new vector (x_diff)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# multiply x_diff by the mutation factor (F) and add to x_1
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best_individual&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where &lt;i&gt;maxiter&lt;/i&gt; represents the number of generations we want to run the algorithm for and &lt;i&gt;mutate&lt;/i&gt; represents the mutation factor &lt;equation class=&quot;has-jax&quot;&gt;\( F \)&lt;/equation&gt;. Next step is recombination or “crossover” in the language of genetic algorithms. For this, we need to introduce a new user selected value known as the “recombination rate” (some texts refer to this as the crossover ratio or CR). This recombination rate is a float value that varies between zero and one and determines if recombination occurs. Cycling through each index position in the target vector, we generate a random value between zero and one. If this random value is less than the recombination rate, recombination occurs and we swap out the current variable in our target vector with the corresponding variable in the donor vector. If the randomly generated value is greater than the recombination rate, recombination does not happen and the variable in the target vector is left alone. This new offspring individual is called the &lt;i&gt;trial vector&lt;/i&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in vector 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the minimum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the maximum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# the variable is fine
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;
    
    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- INITIALIZE A POPULATION (step #1) ----------------+
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;c1&quot;&gt;#--- SOLVE --------------------------------------------+
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each generation (step #2)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    
        &lt;span class=&quot;c1&quot;&gt;# cycle through each individual in the population (step #3)
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- MUTATION (step #3.A) ---------------------+
&lt;/span&gt;            
            &lt;span class=&quot;c1&quot;&gt;# select three random vector index positions [0, popsize), not including current vector (j)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# target individual
&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# subtract x3 from x2, and create a new vector (x_diff)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# multiply x_diff by the mutation factor (F) and add to x_1
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;#--- RECOMBINATION (step #3.B) ----------------+
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in our target vector
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                
                &lt;span class=&quot;c1&quot;&gt;# recombination occurs when crossover &amp;lt;= recombination rate
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;# recombination did not occur
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best_individual&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The last real step (#3.C) is selection which consists of evaluating our new trial individual &lt;i&gt;v_trial&lt;/i&gt; against the currently selected individual (target individual, x_t). We’ll go with the easiest selection scheme for this tutorial which means we’re using greedy selection. This basically means that if the new trial individual performs better than the currently selected target individual, we delete our target individual from the population and replace it with the trial individual. If the target individual is better, than we leave it alone and move on.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in vector 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the minimum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the maximum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# the variable is fine
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;
    
    
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- INITIALIZE A POPULATION (step #1) ----------------+
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;c1&quot;&gt;#--- SOLVE --------------------------------------------+
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each generation (step #2)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    
        &lt;span class=&quot;c1&quot;&gt;# cycle through each individual in the population (step #3)
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- MUTATION (step #3.A) ---------------------+
&lt;/span&gt;            
            &lt;span class=&quot;c1&quot;&gt;# select three random vector index positions [0, popsize), not including current vector (j)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# target individual
&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# subtract x3 from x2, and create a new vector (x_diff)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# multiply x_diff by the mutation factor (F) and add to x_1
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;#--- RECOMBINATION (step #3.B) ----------------+
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in our target vector
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                
                &lt;span class=&quot;c1&quot;&gt;# recombination occurs when crossover &amp;lt;= recombination rate
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

                &lt;span class=&quot;c1&quot;&gt;# recombination did not occur
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                    
            &lt;span class=&quot;c1&quot;&gt;#--- GREEDY SELECTION (step #3.C) -------------+
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'   &amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'   &amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best_individual&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You might have noticed that I’ve skipped over step #4 which is the stopping criteria. This is again, in the interest of keeping the code as simple as possible. Because of this, the stopping criteria is simply when we have cycled through all the generations specified at initialization. Any number of stopping mechanisms from other optimization routines can be implemented here.&lt;/p&gt;

&lt;p&gt;Putting everything together, adding a few lines for text output, score keeping, and some example cost functions, the final code looks like this (github repository -&amp;gt; &lt;a target=&quot;_blank&quot; href=&quot;https://github.com/nathanrooy/differential-evolution-optimization-with-python/blob/master/DE.py&quot;&gt;here&lt;/a&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#------------------------------------------------------------------------------+
#
#   Nathan A. Rooy
#   A simple, bare bones, implementation of differential evolution with Python
#   August, 2017
#
#------------------------------------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#--- IMPORT DEPENDENCIES ------------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#--- EXAMPLE COST FUNCTIONS ---------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Sphere function, use any bounds, f(0,...,0)=0
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))])&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Beale's function, use bounds=[(-4.5, 4.5),(-4.5, 4.5)], f(3,0.5)=0.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;term1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.500&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;term2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.250&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;term3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.625&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#--- FUNCTIONS ----------------------------------------------------------------+
&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each variable in vector 
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the minimum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# variable exceedes the maximum boundary
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# the variable is fine
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vec_new&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;#--- MAIN ---------------------------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#--- INITIALIZE A POPULATION (step #1) ----------------+
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;c1&quot;&gt;#--- SOLVE --------------------------------------------+
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# cycle through each generation (step #2)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'GENERATION:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# score keeping
&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# cycle through each individual in the population
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- MUTATION (step #3.A) ---------------------+
&lt;/span&gt;            
            &lt;span class=&quot;c1&quot;&gt;# select three random vector index positions [0, popsize), not including current vector (j)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# target individual
&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# subtract x3 from x2, and create a new vector (x_diff)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_2_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# multiply x_diff by the mutation factor (F) and add to x_1
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_1_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff_i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ensure_bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- RECOMBINATION (step #3.B) ----------------+
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crossover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_donor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
                    
            &lt;span class=&quot;c1&quot;&gt;#--- GREEDY SELECTION (step #3.C) -------------+
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'   &amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_trial&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'   &amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score_target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;#--- SCORE KEEPING --------------------------------+
&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gen_avg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;# current generation avg. fitness
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;gen_best&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                  &lt;span class=&quot;c1&quot;&gt;# fitness of best individual
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;gen_sol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_scores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# solution of best individual
&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'      &amp;gt; GENERATION AVERAGE:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_avg&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'      &amp;gt; GENERATION BEST:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_best&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'         &amp;gt; BEST SOLUTION:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_sol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_sol&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#--- CONSTANTS ----------------------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func1&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;# Cost function
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# Bounds [(x1_min, x1_max), (x2_min, x2_max),...]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;# Population size, must be &amp;gt;= 4
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;# Mutation factor [0,2]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;# Recombination rate [0,1]
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;                        &lt;span class=&quot;c1&quot;&gt;# Max number of generations (maxiter)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#--- RUN ----------------------------------------------------------------------+
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recombination&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#--- END ----------------------------------------------------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it! Differential evolution is a very simple evolutionary routine that produces great results when used correctly. I hope this was helpful. Thanks for reading!&lt;/p&gt;

&lt;center style=&quot;letter-spacing:1.25em; font-size:1.5em; padding-bottom:0.5em; padding-top:0.5em&quot;&gt;·····&lt;/center&gt;

&lt;p&gt;Notes:
In step #3, this implementation differs from most DE algorithms in that we cycle through each member of the population, generate a donor vector, then perform selection. In this setup, every member of the population becomes a target vector at some point which means that every individual has the possibility of being replaced. In most DE implementations, the target vector is randomly chosen. In my experience using DE (both in aerodynamic shape optimization, as well as in deep learning applications), I have found that the current implementation works much better. The standard DE implementation might be slightly more stochastic in nature, but whatever… If, you’re interested in the “standard” DE implementation swap out the lines in the above code with the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;        &lt;span class=&quot;c1&quot;&gt;# cycle through each individual in the population
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;#--- MUTATION ---------------------------------+
&lt;/span&gt;            
            &lt;span class=&quot;c1&quot;&gt;# select four random vector index positions, range = [0, popsize)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;popsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;canidates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;x_1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;x_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 27 Aug 2017 00:00:00 -0400</pubDate>
        <link>https://nathanrooy.github.io//posts/2017-08-27/simple-differential-evolution-with-python/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2017-08-27/simple-differential-evolution-with-python/</guid>
      </item>
    
      <item>
        <title>Cincinnati Summer Street Art Update</title>
        <description>&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;window.jQuery || document.write('&lt;script src=&quot;_/js/libs/jquery-1.9.1.min.js&quot;&gt;&lt;\/script&gt;')&lt;/script&gt;

&lt;center&gt;
    &lt;div class=&quot;photoset-grid-lightbox&quot; data-layout=&quot;23121&quot;&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_1271-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_1271-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_5405-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_5405-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_6216-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_6216-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_6309-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_6309-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_6318-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_6318-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_6426-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_6426-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_7417-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_7417-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_8986-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_8986-WEB.jpg&quot; /&gt;
        &lt;img src=&quot;/images/2017-05-30/DSC_7742-THUMB.jpg&quot; width=&quot;900&quot; height=&quot;600&quot; data-highres=&quot;/images/2017-05-30/DSC_7742-WEB.jpg&quot; /&gt;
    &lt;/div&gt;
&lt;/center&gt;

&lt;script src=&quot;/assets/js/jquery.photoset-grid.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;/assets/js/jquery.colorbox.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
$('.photoset-grid-lightbox').photosetGrid({
  highresLinks: true,
  rel: 'withhearts-gallery',
  gutter: '5px',

  onComplete: function(){
    $('.photoset-grid-lightbox').attr('style', '');
    $('.photoset-grid-lightbox a').colorbox({
      photo: true,
      scalePhotos: true,
      maxHeight:'90%',
      maxWidth:'90%'
    });
  }
});
&lt;/script&gt;

</description>
        <pubDate>Tue, 30 May 2017 00:00:00 -0400</pubDate>
        <link>https://nathanrooy.github.io//posts/2017-05-30/cincinnati-street-art-update/</link>
        <guid isPermaLink="true">https://nathanrooy.github.io//posts/2017-05-30/cincinnati-street-art-update/</guid>
      </item>
    
  </channel>
</rss>